{"version":3,"sources":["RecipeIngredientName/RecipeIngredientName.js","RecipeIngredientPercent/RecipeIngredientPercent.js","RecipeIngredientContainer/RecipeIngredientContainer.js","App.js","reportWebVitals.js","index.js"],"names":["RecipeIngredientName","props","className","type","placeholder","name","inputName","value","ingredientTextValue","onChange","e","handleChange","RecipeIngredientPercent","ingredientPercentValue","RecipeIngredientContainer","id","weight","flourTotal","isNaN","isFinite","toFixed","getWeight","onClick","handleSubtractClick","renderSubtractButton","App","useState","recipe_name","flour_total","recipe","setRecipe","percent","Date","now","flours","setFlours","ingredients","setIngredients","handleChangeRecipe","target","preventDefault","filter","key","handleAddClickFlour","map","i","ingredientCount","nameArr","split","propertyName","parseInt","handleChangeFlours","handleAddClickIngredients","handleChangeIngredients","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57821f27.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction RecipeIngredientName(props) {\n  return (\n    <div>\n      <input\n        className=\"recipe__input_name\"\n        type=\"text\"\n        placeholder=\"Ingredient\"\n        name={props.inputName}\n        value={props.ingredientTextValue}\n        onChange={(e) => props.handleChange(e)}\n      />\n    </div>\n  );\n}\n\nexport default RecipeIngredientName;\n","import React from \"react\";\n\nfunction RecipeIngredientPercent(props) {\n  return (\n    <div className=\"recipe__input-percent-container\">\n      <input\n        className=\"recipe__input_percent\"\n        type=\"number\"\n        name={props.inputName}\n        value={props.ingredientPercentValue}\n        onChange={(e) => props.handleChange(e)}\n      />\n      <p className=\"recipe__input_percent-text\">%</p>\n    </div>\n  );\n}\n\nexport default RecipeIngredientPercent;\n","import React from \"react\";\nimport RecipeIngredientName from \"../RecipeIngredientName/RecipeIngredientName\";\nimport RecipeIngredientPercent from \"../RecipeIngredientPercent/RecipeIngredientPercent\";\n\nfunction RecipeIngredientContainer(props) {\n  const renderSubtractButton = () => {\n    const id = props.id;\n    return (\n      <button\n        onClick={(e) => props.handleSubtractClick(e, id)}\n        className=\"recipe__button_delete\"\n      >\n        -\n      </button>\n    );\n  };\n\n  const getWeight = () => {\n    let weight = props.flourTotal * (props.ingredientPercentValue / 100);\n    weight = isNaN(weight) || !isFinite(weight) ? \"\" : weight.toFixed(1);\n\n    return (\n      <p className=\"recipe-ingredient-container__calc-weight-value\">\n        {weight} g\n      </p>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"recipe-ingredient-container\">\n        <RecipeIngredientName\n          inputName={`name_${props.id}`}\n          ingredientTextValue={props.ingredientTextValue}\n          handleChange={(e) => props.handleChange(e)}\n        />\n        <RecipeIngredientPercent\n          inputName={`percent_${props.id}`}\n          ingredientPercentValue={props.ingredientPercentValue}\n          handleChange={(e) => props.handleChange(e)}\n        />\n\n        <div className=\"recipe-ingredient-container__calc-weight-div\">\n          {getWeight()}\n        </div>\n        <div>{renderSubtractButton()}</div>\n      </div>\n    </>\n  );\n}\n\nexport default RecipeIngredientContainer;\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport RecipeIngredientContainer from \"./RecipeIngredientContainer/RecipeIngredientContainer\";\n\nfunction App() {\n  const [recipe, setRecipe] = useState({\n    recipe_name: \"\",\n    flour_total: 0,\n  });\n\n  const [flours, setFlours] = useState([\n    { name: \"\", percent: \"\", id: Date.now() },\n  ]);\n  const [ingredients, setIngredients] = useState([\n    { name: \"\", percent: \"\", id: Date.now() },\n  ]);\n\n  const handleChangeRecipe = (e) => {\n    setRecipe({ ...recipe, [e.target.name]: e.target.value });\n  };\n\n  const handleChangeFlours = (e) => {\n    let nameArr = e.target.name.split(\"_\");\n    const propertyName = nameArr[0];\n    const id = parseInt(nameArr[1]);\n    setFlours(\n      flours.map((key) =>\n        key.id === id ? { ...key, [propertyName]: e.target.value } : key\n      )\n    );\n  };\n\n  //duplicative?\n  const handleChangeIngredients = (e) => {\n    let nameArr = e.target.name.split(\"_\");\n    const propertyName = nameArr[0];\n    const id = parseInt(nameArr[1]);\n    setIngredients(\n      ingredients.map((key) =>\n        key.id === id ? { ...key, [propertyName]: e.target.value } : key\n      )\n    );\n  };\n\n  const renderFlours = () => {\n    return flours.map((key, i) => {\n      const id = key.id;\n      return (\n        <RecipeIngredientContainer\n          key={id}\n          id={id}\n          flourTotal={recipe.flour_total}\n          ingredientCount={i}\n          ingredientTextValue={key.name}\n          ingredientPercentValue={key.percent}\n          handleChange={(e) => handleChangeFlours(e)}\n          handleSubtractClick={(e, id) => handleSubtractClick(e, id)}\n        />\n      );\n    });\n  };\n\n  //duplicative?\n  const renderIngredients = () => {\n    return ingredients.map((key, i) => {\n      const id = key.id;\n      return (\n        <RecipeIngredientContainer\n          key={id}\n          id={id}\n          flourTotal={recipe.flour_total}\n          ingredientCount={i}\n          ingredientTextValue={key.name}\n          ingredientPercentValue={key.percent}\n          handleChange={(e) => handleChangeIngredients(e)}\n          handleSubtractClick={(e, id) => handleSubtractClick(e, id)}\n        />\n      );\n    });\n  };\n\n  const handleSubtractClick = (e, id) => {\n    e.preventDefault();\n    setFlours(flours.filter((key) => key.id !== id));\n  };\n\n  const handleAddClickFlour = (e) => {\n    e.preventDefault();\n    setFlours([...flours, { name: \"\", percent: \"\", id: Date.now() }]);\n  };\n\n  //duplicative\n  const handleAddClickIngredients = (e) => {\n    e.preventDefault();\n    setIngredients([...ingredients, { name: \"\", percent: \"\", id: Date.now() }]);\n  };\n\n  return (\n    <main className=\"recipe\">\n      <form>\n        <header className=\"recipe-header\">\n          <div className=\"recipe-container\">\n            <legend className=\"recipe-container__legend\">Name</legend>\n            <input\n              className=\"recipe__input_heading\"\n              type=\"text\"\n              placeholder=\"Recipe Name\"\n              value={recipe.recipe_name}\n              name=\"recipe_name\"\n              onChange={(e) => handleChangeRecipe(e)}\n            />\n          </div>\n          <div className=\"recipe-container\">\n            <legend className=\"recipe-container__legend\">\n              Total Flour (g)\n            </legend>\n            <input\n              className=\"recipe__input_heading\"\n              type=\"number\"\n              placeholder=\"0\"\n              value={recipe.flour_total}\n              name=\"flour_total\"\n              onChange={(e) => handleChangeRecipe(e)}\n            />\n          </div>\n        </header>\n        <hr />\n        <section className=\"recipe-section\">\n          <div className=\"recipe-banner\">\n            <p className=\"recipe-banner__text\">Flour</p>\n            <button\n              className=\"recipe-button_add\"\n              onClick={(e) => handleAddClickFlour(e)}\n            >\n              Add\n            </button>\n          </div>\n          {renderFlours()}\n        </section>\n        <section className=\"recipe-section recipe-section_ingredients\">\n          <div className=\"recipe-banner\">\n            <p className=\"recipe-banner__text\">Ingredients</p>\n            <button\n              className=\"recipe-button_add\"\n              onClick={(e) => handleAddClickIngredients(e)}\n            >\n              Add\n            </button>\n          </div>\n          {renderIngredients()}\n        </section>\n      </form>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}