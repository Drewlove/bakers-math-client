{"version":3,"sources":["RecipeForm/RecipeFormHeader/RecipeFormHeader.js","RecipeForm/RecipeFormIngredientName/RecipeFormIngredientName.js","RecipeForm/RecipeFormIngredientPercent/RecipeFormIngredientPercent.js","RecipeForm/RecipeFormIngredient/RecipeFormIngredient.js","RecipeForm/RecipeFormSection/RecipeFormSection.js","Config.js","CommonFormComponents/FormSaveButton/FormSaveButton.js","Utilities/APImethods/API_SAVE.js","RecipeForm/RecipeForm/RecipeForm.js","Utilities/APImethods/API_GET.js","FetchData/FetchData.js","RecipeForm/RecipeFormContainer/RecipeFormContainer.js","RecipeList/RecipeListItem/RecipeListItem.js","RecipeList/RecipeList/RecipeList.js","RecipeList/RecipeListContainer/RecipeListContainer.js","AppRoutes/AppRoutes.js","NavBar/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["RecipeFormHeader","props","className","type","placeholder","value","recipe","recipe_name","name","onChange","e","handleChangeRecipe","flour_total","RecipeFormIngredientName","inputName","ingredientTextValue","handleChangeIngredient","RecipeFormIngredientPercent","ingredientPercentValue","RecipeFormIngredient","ingredient_id","weight","flourTotal","isNaN","isFinite","toFixed","getWeight","onClick","handleSubtractClick","RecipeFormSection","arr","sectionName","handleClickAddIngredient","ingredientType","ingredients","map","key","i","id","ingredientCount","percent","config","API_ENDPOINT","process","HEADERS","Authorization","FormSaveButton","formData","endpointSuffix","rowId","saveMethod","useState","isSaving","saveSuccessful","saveError","resSave","setRes","url","useCallback","a","prevState","console","log","fetch","method","body","JSON","stringify","headers","result","ok","API_SAVE","saveData","validateForm","preventDefault","RecipeForm","setRecipe","flours","setFlours","setIngredients","recipeId","useParams","useEffect","data","Date","now","nameArr","target","split","propertyName","updateFlour","updateIngredient","filter","formName","redirectSuffix","dataReducer","state","action","isLoading","isLoaded","isError","payload","error","Error","getUrls","endpointArr","fetchResponseArr","urls","token","Promise","all","responseArr","getDispatchObj","validateResponses","status","res","json","forEach","statusText","FetchData","useReducer","dispatch","didCancel","length","dispatchObj","getData","API_GET","renderError","renderContainer","React","cloneElement","children","RecipeFormContainer","RecipeListItem","to","recipe_id","RecipeList","RecipeListContainer","AppRoutes","path","component","exact","NavBar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8296c7aa.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction RecipeFormHeader(props) {\n  return (\n    <header className=\"recipe-header\">\n      <div className=\"recipe-container\">\n        <legend className=\"recipe-container__legend\">Name</legend>\n        <input\n          className=\"recipe__input_heading\"\n          type=\"text\"\n          placeholder=\"Recipe Name\"\n          value={props.recipe.recipe_name}\n          name=\"recipe_name\"\n          onChange={(e) => props.handleChangeRecipe(e)}\n        />\n      </div>\n      <div className=\"recipe-container\">\n        <legend className=\"recipe-container__legend\">Total Flour (g)</legend>\n        <input\n          className=\"recipe__input_heading\"\n          type=\"number\"\n          placeholder=\"0\"\n          value={props.recipe.flour_total}\n          name=\"flour_total\"\n          onChange={(e) => props.handleChangeRecipe(e)}\n        />\n      </div>\n    </header>\n  );\n}\n\nexport default RecipeFormHeader;\n","import React from \"react\";\n\nfunction RecipeFormIngredientName(props) {\n  return (\n    <div className=\"recipe-ingredient-name-container\">\n      <input\n        className=\"recipe-ingredient__input recipe-ingredient__input_name\"\n        type=\"text\"\n        placeholder=\"Ingredient\"\n        name={props.inputName}\n        value={props.ingredientTextValue}\n        onChange={(e) => props.handleChangeIngredient(e)}\n      />\n    </div>\n  );\n}\n\nexport default RecipeFormIngredientName;\n","import React from \"react\";\n\nfunction RecipeFormIngredientPercent(props) {\n  return (\n    <div className=\"recipe__input-percent-container\">\n      <input\n        className=\"recipe-ingredient__input_percent\"\n        type=\"number\"\n        name={props.inputName}\n        value={props.ingredientPercentValue}\n        onChange={(e) => props.handleChangeIngredient(e)}\n      />\n      <p className=\"recipe__input_percent-text\">%</p>\n    </div>\n  );\n}\n\nexport default RecipeFormIngredientPercent;\n","import React from \"react\";\nimport RecipeFormIngredientName from \"../RecipeFormIngredientName/RecipeFormIngredientName\";\nimport RecipeFormIngredientPercent from \"../RecipeFormIngredientPercent/RecipeFormIngredientPercent\";\n\nfunction RecipeFormIngredient(props) {\n  const renderSubtractButton = () => {\n    return (\n      <button\n        onClick={(e) => props.handleSubtractClick(e)}\n        className=\"recipe__button_delete\"\n      >\n        -\n      </button>\n    );\n  };\n\n  const getWeight = () => {\n    let weight = props.flourTotal * (props.ingredientPercentValue / 100);\n    weight = isNaN(weight) || !isFinite(weight) ? \"\" : weight.toFixed(1);\n\n    return (\n      <p className=\"recipe-ingredient-container__calc-weight-value\">\n        {weight} g\n      </p>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"recipe-ingredient-container\">\n        <RecipeFormIngredientName\n          inputName={`name-${props.ingredient_id}`}\n          ingredientTextValue={props.ingredientTextValue}\n          handleChangeIngredient={(e) => props.handleChangeIngredient(e)}\n        />\n        <div className=\"recipe-ingredient-percent-wt-btn-container\">\n          <RecipeFormIngredientPercent\n            inputName={`percent-${props.ingredient_id}`}\n            ingredientPercentValue={props.ingredientPercentValue}\n            handleChangeIngredient={(e) => props.handleChangeIngredient(e)}\n          />\n\n          <div className=\"recipe-ingredient-container__calc-weight-div\">\n            {getWeight()}\n          </div>\n          <div>{renderSubtractButton()}</div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default RecipeFormIngredient;\n","import React from \"react\";\nimport RecipeFormIngredient from \"../RecipeFormIngredient/RecipeFormIngredient\";\n\nfunction RecipeFormSection(props) {\n  const renderIngredients = (arr) => {\n    return arr.map((key, i) => {\n      const { id } = key;\n      return (\n        <RecipeFormIngredient\n          key={id}\n          ingredient_id={id}\n          flourTotal={props.recipe.flour_total}\n          ingredientCount={i}\n          ingredientTextValue={key.name}\n          ingredientPercentValue={key.percent}\n          handleChangeIngredient={(e) =>\n            props.handleChangeIngredient(e, props.ingredientType)\n          }\n          handleSubtractClick={(e, id) =>\n            props.handleSubtractClick(e, id, props.ingredientType)\n          }\n        />\n      );\n    });\n  };\n\n  return (\n    <>\n      <section className=\"recipe-section\">\n        <div className=\"recipe-banner\">\n          <p className=\"recipe-banner__text\">{props.sectionName}</p>\n          <button\n            className=\"recipe-button_add\"\n            onClick={(e) =>\n              props.handleClickAddIngredient(e, props.ingredientType)\n            }\n          >\n            +\n          </button>\n        </div>\n        {renderIngredients(props.ingredients)}\n      </section>\n    </>\n  );\n}\n\nexport default RecipeFormSection;\n","const config = {\n  API_ENDPOINT: process.env.REACT_APP_SERVER,\n  HEADERS: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`,\n  },\n};\n\nexport default config;\n","// import React, { useEffect, useState } from \"react\";\nimport React from \"react\";\n// import Modal from \"../../../Modal/Modal\";\nimport { API_SAVE } from \"../../Utilities/APImethods/API_SAVE\";\n// import { useHistory } from \"react-router-dom\";\n// import { GET_ALL_ERROR_MESSAGES } from \"../../ValidateForm/GET_ALL_ERROR_MESSAGES\";\n\nfunction FormSaveButton(props) {\n  // const history = useHistory();\n  // const [resSave, saveData] = API_SAVE(\n  //   props.formData,\n  //   props.endpointSuffix,\n  //   props.rowId\n  // );\n  const [saveData] = API_SAVE(\n    props.formData,\n    props.endpointSuffix,\n    props.rowId\n  );\n\n  // const [modal, setModal] = useState({\n  //   display: false,\n  // });\n\n  // useEffect(() => {\n  //   if (resSave.saveSuccessful)\n  //     return setModal({\n  //       display: true,\n  //       type: \"notification\",\n  //       text: \"Save successful.\",\n  //       redirect: true,\n  //       redirectSuffix: props.redirectSuffix,\n  //     });\n\n  //   if (resSave.saveError.length > 0) {\n  //     return setModal({\n  //       display: true,\n  //       type: \"notification\",\n  //       text: \"Failed to save.\",\n  //       redirect: false,\n  //       redirectSuffix: \"\",\n  //     });\n  //   }\n  // }, [resSave, props.redirectSuffix]);\n\n  // const hideModal = (e) => {\n  //   e.preventDefault();\n  //   setModal({ ...modal, display: false });\n  //   if (modal.redirect) history.push(`/${props.redirectSuffix}`);\n  // };\n\n  // const renderModal = () => {\n  //   return (\n  //     <Modal\n  //       type={modal.type}\n  //       text={modal.text}\n  //       redirect={modal.redirect}\n  //       handleModalClose={(e) => hideModal(e)}\n  //     />\n  //   );\n  // };\n\n  const handleSave = (e) => {\n    e.preventDefault();\n    validateForm();\n  };\n\n  const validateForm = () => {\n    // const formErrorsObj = GET_ALL_ERROR_MESSAGES(\n    //   props.formName,\n    //   props.formData\n    // );\n\n    // props.setFormError(formErrorsObj);\n    // for (const property in formErrorsObj) {\n    //   let formErrorMessage = formErrorsObj[property];\n    //   if (formErrorMessage.length > 0) return;\n    // }\n    saveData();\n  };\n\n  return (\n    <section className=\"save-button-section\">\n      {/* {modal.display ? renderModal() : null} */}\n      <button\n        id=\"button-save\"\n        className=\"button save-button-section__button\"\n        type=\"submit\"\n        value=\"Save\"\n        onClick={handleSave}\n      >\n        Save\n      </button>\n    </section>\n  );\n}\n\nexport default FormSaveButton;\n","import { useState, useCallback } from \"react\";\nimport config from \"../../Config\";\n// import { useAuth0 } from \"@auth0/auth0-react\";\n\nexport const API_SAVE = (formData, endpointSuffix, rowId) => {\n  const [resSave, setRes] = useState({\n    formData: null,\n    isSaving: false,\n    saveSuccessful: false,\n    saveError: \"\",\n  });\n\n  //   const { getAccessTokenSilently } = useAuth0();\n\n  let saveMethod;\n  //   const { user } = useAuth0();\n  //   const userId = user.sub.split(\"|\")[1];\n\n  //   let url = `${config.API_ENDPOINT}/${endpointSuffix}/${userId}`;\n  let url = `${config.API_ENDPOINT}/${endpointSuffix}`;\n  if (rowId === \"new\") {\n    saveMethod = \"POST\";\n  } else {\n    saveMethod = \"PATCH\";\n    url = `${url}/${rowId}`;\n  }\n\n  const saveData = useCallback(async () => {\n    setRes((prevState) => ({ ...prevState, isSaving: true }));\n    try {\n      //   const token = await getAccessTokenSilently();\n      const token = process.env.REACT_APP_API_KEY;\n      console.log(formData, saveMethod);\n\n      const result = await fetch(url, {\n        method: saveMethod,\n        body: JSON.stringify(formData),\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      if (result.ok)\n        setRes((prevState) => ({\n          ...prevState,\n          isSaving: false,\n          saveSuccessful: true,\n          saveError: \"\",\n        }));\n      else if (!result.ok) {\n        setRes((prevState) => ({\n          ...prevState,\n          isSaving: false,\n          saveSuccessful: false,\n          saveError: \"Failed to save.\",\n        }));\n      }\n    } catch (error) {\n      setRes((prevState) => ({\n        ...prevState,\n        isSaving: false,\n        saveSuccessful: false,\n        saveError: \"Failed to save.\",\n      }));\n    }\n  }, [formData, saveMethod, url]);\n  //   }, [formData, saveMethod, getAccessTokenSilently, url]);\n  return [resSave, saveData];\n};\n","import { useEffect, useState } from \"react\";\nimport RecipeFormHeader from \"../RecipeFormHeader/RecipeFormHeader\";\nimport RecipeFormSection from \"../RecipeFormSection/RecipeFormSection\";\nimport FormSaveButton from \"../../CommonFormComponents/FormSaveButton/FormSaveButton\";\nimport { useParams } from \"react-router-dom\";\n\nfunction RecipeForm(props) {\n  const [recipe, setRecipe] = useState({\n    recipe_name: \"\",\n    flour_total: \"\",\n  });\n\n  const [flours, setFlours] = useState([{ name: \"\", percent: \"\", id: \"\" }]);\n  const [ingredients, setIngredients] = useState([\n    { name: \"\", percent: \"\", id: \"\" },\n  ]);\n\n  const { recipeId } = useParams();\n\n  useEffect(() => {\n    if (recipeId !== \"new\") {\n      const recipe = props.data[0];\n      const { flours, ingredients } = recipe;\n      setFlours(flours);\n      setIngredients(ingredients);\n      setRecipe({\n        recipe_name: recipe.recipe_name,\n        flour_total: recipe.flour_total,\n      });\n    } else {\n      setFlours([{ name: \"\", percent: \"\", id: Date.now() }]);\n      setIngredients([{ name: \"\", percent: \"\", id: Date.now() }]);\n      setRecipe({ recipe_name: \"\", flour_total: \"\" });\n    }\n  }, [props.data, recipeId]);\n\n  const handleChangeRecipe = (e) => {\n    setRecipe({ ...recipe, [e.target.name]: e.target.value });\n  };\n\n  const handleChangeIngredient = (e, ingredientType) => {\n    let nameArr = e.target.name.split(\"-\");\n    const propertyName = nameArr[0];\n    const id = nameArr[1];\n    if (ingredientType === \"flour\") updateFlour(e, propertyName, id);\n    else if (ingredientType === \"ingredient\")\n      updateIngredient(e, propertyName, id);\n  };\n\n  const updateIngredient = (e, propertyName, id) => {\n    setIngredients(\n      ingredients.map((key) => {\n        return key.id === id ? { ...key, [propertyName]: e.target.value } : key;\n      })\n    );\n  };\n\n  const updateFlour = (e, propertyName, id) => {\n    setFlours(\n      flours.map((key) =>\n        key.id === id ? { ...key, [propertyName]: e.target.value } : key\n      )\n    );\n  };\n  const handleSubtractClick = (e, id, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\")\n      setFlours(flours.filter((key) => key.id !== id));\n    else if (ingredientType === \"ingredient\")\n      setIngredients(ingredients.filter((key) => key.id !== id));\n  };\n\n  const handleClickAddIngredient = (e, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\")\n      setFlours([...flours, { name: \"\", percent: \"\", id: Date.now() }]);\n    else if (ingredientType === \"ingredient\")\n      setIngredients([\n        ...ingredients,\n        { name: \"\", percent: \"\", id: Date.now() },\n      ]);\n  };\n\n  return (\n    <form>\n      <RecipeFormHeader\n        recipe={recipe}\n        handleChangeRecipe={(e) => handleChangeRecipe(e)}\n      />\n\n      <hr />\n      <RecipeFormSection\n        sectionName=\"Flour\"\n        recipe={recipe}\n        ingredients={flours}\n        ingredientType=\"flour\"\n        handleClickAddIngredient={(e, ingredientType) =>\n          handleClickAddIngredient(e, ingredientType)\n        }\n        handleChangeIngredient={(e, ingredientType) =>\n          handleChangeIngredient(e, ingredientType)\n        }\n        handleSubtractClick={(e, id, ingredientType) =>\n          handleSubtractClick(e, id, ingredientType)\n        }\n      />\n      <RecipeFormSection\n        sectionName=\"Ingredients\"\n        recipe={recipe}\n        ingredients={ingredients}\n        ingredientType=\"ingredient\"\n        handleClickAddIngredient={(e, ingredientType) =>\n          handleClickAddIngredient(e, ingredientType)\n        }\n        handleChangeIngredient={(e, ingredientType) =>\n          handleChangeIngredient(e, ingredientType)\n        }\n        handleSubtractClick={(e, id, ingredientType) =>\n          handleSubtractClick(e, id, ingredientType)\n        }\n      />\n      <FormSaveButton\n        formData={{\n          recipe_name: recipe.recipe_name,\n          flour_total: recipe.flour_total,\n          flours: flours,\n          ingredients: ingredients,\n        }}\n        formName=\"recipe\"\n        endpointSuffix=\"recipes\"\n        redirectSuffix=\"/\"\n        rowId={recipeId}\n        // setFormError={setFormError}\n      />\n    </form>\n  );\n}\n\nexport default RecipeForm;\n","import { useEffect, useReducer } from \"react\";\nimport config from \"../../Config\";\n// import { useAuth0 } from \"@auth0/auth0-react\";\n\nconst dataReducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_INIT\":\n      return {\n        ...state,\n        isLoading: true,\n        isLoaded: false,\n        isError: false,\n      };\n    case \"FETCH_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isLoaded: true,\n        isError: false,\n        data: action.payload,\n      };\n    case \"FETCH_FAILURE\":\n      return {\n        ...state,\n        isLoading: false,\n        isLoaded: false,\n        isError: true,\n        error: action.error,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nexport const API_GET = (endpointArr) => {\n  const [state, dispatch] = useReducer(dataReducer, {\n    isLoading: true,\n    isError: false,\n    error: {},\n    data: [],\n  });\n  //   const { getAccessTokenSilently } = useAuth0();\n\n  useEffect(() => {\n    let didCancel = false;\n\n    const getData = async () => {\n      if (endpointArr.length === 0)\n        return dispatch({ type: \"FETCH_SUCCESS\", payload: {} });\n\n      dispatch({ type: \"FETCH_INIT\" });\n      const urls = getUrls(endpointArr);\n      try {\n        if (!didCancel) {\n          //   const token = await getAccessTokenSilently();\n          const token = process.env.REACT_APP_API_KEY;\n          const responseArr = await fetchResponseArr(urls, token);\n          const dispatchObj = await getDispatchObj(responseArr);\n          dispatch(dispatchObj);\n        }\n      } catch (error) {\n        if (!didCancel)\n          dispatch({\n            type: \"FETCH_FAILURE\",\n            error: { status: \"NA\", statusText: \"Failed to fetch resource\" },\n          });\n      }\n    };\n    getData();\n    return () => {\n      didCancel = true;\n    };\n  }, [\n    endpointArr,\n    //  getAccessTokenSilently\n  ]);\n  return [state, dispatch];\n};\n\nconst getUrls = (endpointArr) => {\n  let urlArr = endpointArr.map((key) => {\n    let url = `${config.API_ENDPOINT}/${key}`;\n    return url;\n  });\n  return urlArr;\n};\n\nconst fetchResponseArr = async (urls, token) => {\n  const responseArr = await Promise.all(\n    urls.map((url) => {\n      return fetch(url, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    })\n  );\n  return responseArr;\n};\n\nconst getDispatchObj = async (responseArr) => {\n  let error = validateResponses(responseArr);\n  if (error.status) {\n    return { type: \"FETCH_FAILURE\", error: error };\n  } else {\n    const data = await Promise.all(responseArr.map((res) => res.json()));\n    return { type: \"FETCH_SUCCESS\", payload: data };\n  }\n};\n\nconst validateResponses = (responseArr) => {\n  let error = {};\n  responseArr.forEach((key) => {\n    if (!key.ok) {\n      error = {\n        status: key.status,\n        statusText: key.statusText,\n      };\n    }\n  });\n  return error;\n};\n","import React from \"react\";\nimport { API_GET } from \"../Utilities/APImethods/API_GET\";\n// import SkeletonLoader from \"../SkeletonLoader/SkeletonLoader\";\n// import Error from \"../Error/Error\";\n\nfunction FetchData(props) {\n  // const [{ data, isLoading, isError, error }] = API_GET(props.endpointArr);\n  const [{ data, isLoading, isError, error }] = API_GET(props.endpointArr);\n\n  const renderSkeleton = () => {\n    // return <SkeletonLoader skeletonNumber={props.skeletonNumber} />;\n    return <h1>Loading...</h1>;\n  };\n\n  const renderResults = () => {\n    return isError ? renderError() : renderContainer();\n  };\n\n  const renderError = () => {\n    // return <Error error={error} />;\n    return (\n      <h1>\n        {error.status} {error.statusText}\n      </h1>\n    );\n  };\n\n  const renderContainer = () => {\n    return (\n      <>\n        {React.cloneElement(props.children, {\n          data: data,\n        })}\n      </>\n    );\n  };\n\n  return <>{isLoading ? renderSkeleton() : renderResults()}</>;\n}\n\nexport default FetchData;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport RecipeForm from \"../RecipeForm/RecipeForm\";\nimport FetchData from \"../../FetchData/FetchData\";\n\nfunction RecipeFormContainer() {\n  const { recipeId } = useParams();\n  let endpointArr = recipeId === `new` ? [] : [`recipes/${recipeId}`];\n\n  return (\n    <>\n      <FetchData endpointArr={endpointArr}>\n        <RecipeForm />\n      </FetchData>\n    </>\n  );\n}\n\nexport default RecipeFormContainer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction RecipeListItem(props) {\n  return (\n    <Link\n      className=\"recipe-list__link\"\n      to={`/form/recipe/${props.recipe.recipe_id}`}\n    >\n      <li className=\"recipe-list__list-item\">{props.recipe.recipe_name}</li>\n    </Link>\n  );\n}\n\nexport default RecipeListItem;\n","import React from \"react\";\nimport RecipeListItem from \"../RecipeListItem/RecipeListItem\";\n\nfunction RecipeList(props) {\n  const renderList = () => {\n    return props.data[0].map((key) => {\n      return <RecipeListItem key={key.recipe_id} recipe={key} />;\n    });\n  };\n  return (\n    <main>\n      <ul className=\"recipe-list\">{renderList()}</ul>\n    </main>\n  );\n}\n\nexport default RecipeList;\n","import React from \"react\";\nimport FetchData from \"../../FetchData/FetchData\";\nimport RecipeList from \"../RecipeList/RecipeList\";\n\nfunction RecipeListContainer() {\n  return (\n    <FetchData endpointArr={[\"recipes\"]}>\n      <RecipeList />\n    </FetchData>\n  );\n}\n\nexport default RecipeListContainer;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport RecipeFormContainer from \"../RecipeForm/RecipeFormContainer/RecipeFormContainer\";\nimport RecipeListContainer from \"../RecipeList/RecipeListContainer/RecipeListContainer\";\n\nfunction AppRoutes() {\n  return (\n    <Switch>\n      <Route path=\"/form/recipe/:recipeId\" component={RecipeFormContainer} />\n      <Route exact path=\"/\" component={RecipeListContainer} />\n    </Switch>\n  );\n}\n\nexport default AppRoutes;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavBar() {\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar__content\">\n        <Link className=\"navbar__link\" to=\"/\">\n          Baker's Books\n        </Link>\n        <Link className=\"navbar__link\" to=\"/form/recipe/new\">\n          New\n        </Link>\n      </div>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import \"./App.css\";\nimport AppRoutes from \"./AppRoutes/AppRoutes\";\nimport NavBar from \"./NavBar/NavBar\";\n\nfunction App() {\n  return (\n    <>\n      <NavBar />\n      <AppRoutes />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}