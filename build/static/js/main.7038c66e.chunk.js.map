{"version":3,"sources":["RecipeForm/RecipeFormHeader/RecipeFormHeader.js","RecipeForm/RecipeFormIngredientName/RecipeFormIngredientName.js","RecipeForm/RecipeFormIngredientPercent/RecipeFormIngredientPercent.js","RecipeForm/RecipeFormIngredient/RecipeFormIngredient.js","RecipeForm/RecipeFormSection/RecipeFormSection.js","RecipeForm/RecipeFormContainer/RecipeFormContainer.js","RecipeList/RecipeListItem/RecipeListItem.js","RecipeList/RecipeList/RecipeList.js","RecipeList/RecipeListContainer/RecipeListContainer.js","AppRoutes/AppRoutes.js","NavBar/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["RecipeFormHeader","props","className","type","placeholder","value","recipe","recipe_name","name","onChange","e","handleChangeRecipe","flour_total","RecipeFormIngredientName","inputName","ingredientTextValue","handleChangeIngredient","RecipeFormIngredientPercent","ingredientPercentValue","RecipeFormIngredient","id","weight","flourTotal","isNaN","isFinite","toFixed","getWeight","onClick","handleSubtractClick","renderSubtractButton","RecipeFormSection","arr","sectionName","handleClickAddIngredient","ingredientType","ingredients","map","key","i","ingredientCount","percent","RecipeFormContainer","useState","setRecipe","Date","now","flours","setFlours","setIngredients","console","log","nameArr","target","split","propertyName","parseInt","updateFlour","updateIngredient","preventDefault","filter","RecipeListItem","to","recipe_id","RecipeList","recipeList","RecipeListContainer","setRecipeList","useEffect","AppRoutes","path","component","exact","NavBar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7038c66e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction RecipeFormHeader(props) {\n  return (\n    <header className=\"recipe-header\">\n      <div className=\"recipe-container\">\n        <legend className=\"recipe-container__legend\">Name</legend>\n        <input\n          className=\"recipe__input_heading\"\n          type=\"text\"\n          placeholder=\"Recipe Name\"\n          value={props.recipe.recipe_name}\n          name=\"recipe_name\"\n          onChange={(e) => props.handleChangeRecipe(e)}\n        />\n      </div>\n      <div className=\"recipe-container\">\n        <legend className=\"recipe-container__legend\">Total Flour (g)</legend>\n        <input\n          className=\"recipe__input_heading\"\n          type=\"number\"\n          placeholder=\"0\"\n          value={props.recipe.flour_total}\n          name=\"flour_total\"\n          onChange={(e) => props.handleChangeRecipe(e)}\n        />\n      </div>\n    </header>\n  );\n}\n\nexport default RecipeFormHeader;\n","import React from \"react\";\n\nfunction RecipeFormIngredientName(props) {\n  return (\n    <div className=\"recipe-ingredient-name-container\">\n      <input\n        className=\"recipe-ingredient__input recipe-ingredient__input_name\"\n        type=\"text\"\n        placeholder=\"Ingredient\"\n        name={props.inputName}\n        value={props.ingredientTextValue}\n        onChange={(e) => props.handleChangeIngredient(e)}\n      />\n    </div>\n  );\n}\n\nexport default RecipeFormIngredientName;\n","import React from \"react\";\n\nfunction RecipeFormIngredientPercent(props) {\n  return (\n    <div className=\"recipe__input-percent-container\">\n      <input\n        className=\"recipe-ingredient__input_percent\"\n        type=\"number\"\n        name={props.inputName}\n        value={props.ingredientPercentValue}\n        onChange={(e) => props.handleChangeIngredient(e)}\n      />\n      <p className=\"recipe__input_percent-text\">%</p>\n    </div>\n  );\n}\n\nexport default RecipeFormIngredientPercent;\n","import React from \"react\";\nimport RecipeFormIngredientName from \"../RecipeFormIngredientName/RecipeFormIngredientName\";\nimport RecipeFormIngredientPercent from \"../RecipeFormIngredientPercent/RecipeFormIngredientPercent\";\n\nfunction RecipeFormIngredient(props) {\n  const renderSubtractButton = () => {\n    const id = props.id;\n    return (\n      <button\n        onClick={(e) => props.handleSubtractClick(e, id)}\n        className=\"recipe__button_delete\"\n      >\n        -\n      </button>\n    );\n  };\n\n  const getWeight = () => {\n    let weight = props.flourTotal * (props.ingredientPercentValue / 100);\n    weight = isNaN(weight) || !isFinite(weight) ? \"\" : weight.toFixed(1);\n\n    return (\n      <p className=\"recipe-ingredient-container__calc-weight-value\">\n        {weight} g\n      </p>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"recipe-ingredient-container\">\n        <RecipeFormIngredientName\n          inputName={`name_${props.id}`}\n          ingredientTextValue={props.ingredientTextValue}\n          handleChangeIngredient={(e) => props.handleChangeIngredient(e)}\n        />\n        <div className=\"recipe-ingredient-percent-wt-btn-container\">\n          <RecipeFormIngredientPercent\n            inputName={`percent_${props.id}`}\n            ingredientPercentValue={props.ingredientPercentValue}\n            handleChangeIngredient={(e) => props.handleChangeIngredient(e)}\n          />\n\n          <div className=\"recipe-ingredient-container__calc-weight-div\">\n            {getWeight()}\n          </div>\n          <div>{renderSubtractButton()}</div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default RecipeFormIngredient;\n","import React from \"react\";\nimport RecipeFormIngredient from \"../RecipeFormIngredient/RecipeFormIngredient\";\n\nfunction RecipeFormSection(props) {\n  const renderIngredients = (arr) => {\n    return arr.map((key, i) => {\n      const id = key.id;\n      return (\n        <RecipeFormIngredient\n          key={id}\n          id={id}\n          flourTotal={props.recipe.flour_total}\n          ingredientCount={i}\n          ingredientTextValue={key.name}\n          ingredientPercentValue={key.percent}\n          handleChangeIngredient={(e) =>\n            props.handleChangeIngredient(e, props.ingredientType)\n          }\n          handleSubtractClick={(e, id) =>\n            props.handleSubtractClick(e, id, props.ingredientType)\n          }\n        />\n      );\n    });\n  };\n\n  return (\n    <>\n      <section className=\"recipe-section\">\n        <div className=\"recipe-banner\">\n          <p className=\"recipe-banner__text\">{props.sectionName}</p>\n          <button\n            className=\"recipe-button_add\"\n            onClick={(e) =>\n              props.handleClickAddIngredient(e, props.ingredientType)\n            }\n          >\n            +\n          </button>\n        </div>\n        {renderIngredients(props.ingredients)}\n      </section>\n    </>\n  );\n}\n\nexport default RecipeFormSection;\n","import { useState } from \"react\";\nimport RecipeFormHeader from \"../RecipeFormHeader/RecipeFormHeader\";\nimport RecipeFormSection from \"../RecipeFormSection/RecipeFormSection\";\n\nfunction RecipeFormContainer() {\n  const [recipe, setRecipe] = useState({\n    recipe_name: \"\",\n    flour_total: \"\",\n  });\n\n  const [flours, setFlours] = useState([\n    { name: \"\", percent: \"\", id: Date.now() },\n  ]);\n  const [ingredients, setIngredients] = useState([\n    { name: \"\", percent: \"\", id: Date.now() },\n  ]);\n\n  const handleChangeRecipe = (e) => {\n    setRecipe({ ...recipe, [e.target.name]: e.target.value });\n  };\n\n  const handleChangeIngredient = (e, ingredientType) => {\n    console.log(e, ingredientType);\n    let nameArr = e.target.name.split(\"_\");\n    const propertyName = nameArr[0];\n    const id = parseInt(nameArr[1]);\n    if (ingredientType === \"flour\") updateFlour(e, propertyName, id);\n    else if (ingredientType === \"ingredient\")\n      updateIngredient(e, propertyName, id);\n  };\n\n  const updateIngredient = (e, propertyName, id) => {\n    setIngredients(\n      ingredients.map((key) =>\n        key.id === id ? { ...key, [propertyName]: e.target.value } : key\n      )\n    );\n  };\n\n  const updateFlour = (e, propertyName, id) => {\n    setFlours(\n      flours.map((key) =>\n        key.id === id ? { ...key, [propertyName]: e.target.value } : key\n      )\n    );\n  };\n  const handleSubtractClick = (e, id, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\")\n      setFlours(flours.filter((key) => key.id !== id));\n    else if (ingredientType === \"ingredient\")\n      setIngredients(ingredients.filter((key) => key.id !== id));\n  };\n\n  const handleClickAddIngredient = (e, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\")\n      setFlours([...flours, { name: \"\", percent: \"\", id: Date.now() }]);\n    else if (ingredientType === \"ingredient\")\n      setIngredients([\n        ...ingredients,\n        { name: \"\", percent: \"\", id: Date.now() },\n      ]);\n  };\n\n  return (\n    <form>\n      <RecipeFormHeader\n        recipe={recipe}\n        handleChangeRecipe={(e) => handleChangeRecipe(e)}\n      />\n\n      <hr />\n      <RecipeFormSection\n        sectionName=\"Flour\"\n        recipe={recipe}\n        ingredients={flours}\n        ingredientType=\"flour\"\n        handleClickAddIngredient={(e, ingredientType) =>\n          handleClickAddIngredient(e, ingredientType)\n        }\n        handleChangeIngredient={(e, ingredientType) =>\n          handleChangeIngredient(e, ingredientType)\n        }\n        handleSubtractClick={(e, id, ingredientType) =>\n          handleSubtractClick(e, id, ingredientType)\n        }\n      />\n      <RecipeFormSection\n        sectionName=\"Ingredients\"\n        recipe={recipe}\n        ingredients={ingredients}\n        ingredientType=\"ingredient\"\n        handleClickAddIngredient={(e, ingredientType) =>\n          handleClickAddIngredient(e, ingredientType)\n        }\n        handleChangeIngredient={(e, ingredientType) =>\n          handleChangeIngredient(e, ingredientType)\n        }\n        handleSubtractClick={(e, id, ingredientType) =>\n          handleSubtractClick(e, id, ingredientType)\n        }\n      />\n    </form>\n  );\n}\n\nexport default RecipeFormContainer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction RecipeListItem(props) {\n  return (\n    <Link className=\"recipe-list__link\" to={`/form/${props.recipe.recipe_id}`}>\n      <li className=\"recipe-list__list-item\">{props.recipe.recipe_name}</li>\n    </Link>\n  );\n}\n\nexport default RecipeListItem;\n","import React from \"react\";\nimport RecipeListItem from \"../RecipeListItem/RecipeListItem\";\n\nfunction RecipeList(props) {\n  const renderList = () => {\n    return props.recipeList.map((key) => {\n      return <RecipeListItem key={key.recipe_id} recipe={key} />;\n    });\n  };\n  return (\n    <main>\n      <ul className=\"recipe-list\">{renderList()}</ul>\n    </main>\n  );\n}\n\nexport default RecipeList;\n","import React, { useState, useEffect } from \"react\";\nimport RecipeList from \"../RecipeList/RecipeList\";\n\nfunction RecipeListContainer() {\n  const [recipeList, setRecipeList] = useState([]);\n\n  useEffect(() => {\n    const recipes = [\n      { recipe_id: 1, recipe_name: \"Sourdough\" },\n      { recipe_id: 2, recipe_name: \"Challah\" },\n      { recipe_id: 3, recipe_name: \"Focaccia\" },\n    ];\n\n    setRecipeList(recipes);\n  }, []);\n\n  return <RecipeList recipeList={recipeList} />;\n}\n\nexport default RecipeListContainer;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport RecipeFormContainer from \"../RecipeForm/RecipeFormContainer/RecipeFormContainer\";\nimport RecipeListContainer from \"../RecipeList/RecipeListContainer/RecipeListContainer\";\n\nfunction AppRoutes() {\n  return (\n    <Switch>\n      <Route path=\"/form/:recipeId\" component={RecipeFormContainer} />\n      <Route exact path=\"/\" component={RecipeListContainer} />\n    </Switch>\n  );\n}\n\nexport default AppRoutes;\n","import React from \"react\";\n\nfunction NavBar() {\n  return (\n    <nav className=\"navbar\">\n      <h1>Baker's Books</h1>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import \"./App.css\";\nimport AppRoutes from \"./AppRoutes/AppRoutes\";\nimport NavBar from \"./NavBar/NavBar\";\nfunction App() {\n  return (\n    <>\n      <NavBar />\n      <AppRoutes />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}