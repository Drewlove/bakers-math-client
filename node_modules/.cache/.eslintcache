[{"/Users/Drew/Projects/bakers-math-client/src/index.js":"1","/Users/Drew/Projects/bakers-math-client/src/reportWebVitals.js":"2","/Users/Drew/Projects/bakers-math-client/src/App.js":"3","/Users/Drew/Projects/bakers-math-client/src/AppRoutes/AppRoutes.js":"4","/Users/Drew/Projects/bakers-math-client/src/NavBar/NavBar.js":"5","/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeFormContainer/RecipeFormContainer.js":"6","/Users/Drew/Projects/bakers-math-client/src/RecipeList/RecipeListContainer/RecipeListContainer.js":"7","/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeFormHeader/RecipeFormHeader.js":"8","/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeFormSection/RecipeFormSection.js":"9","/Users/Drew/Projects/bakers-math-client/src/RecipeList/RecipeList/RecipeList.js":"10","/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeFormIngredient/RecipeFormIngredient.js":"11","/Users/Drew/Projects/bakers-math-client/src/RecipeList/RecipeListItem/RecipeListItem.js":"12","/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeFormIngredientName/RecipeFormIngredientName.js":"13","/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeFormIngredientPercent/RecipeFormIngredientPercent.js":"14","/Users/Drew/Projects/bakers-math-client/src/Utilities/APImethods/API_GET.js":"15","/Users/Drew/Projects/bakers-math-client/src/Config.js":"16","/Users/Drew/Projects/bakers-math-client/src/FetchData/FetchData.js":"17","/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeForm/RecipeForm.js":"18"},{"size":571,"mtime":1619367341748,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":214,"mtime":1619384029014,"results":"22","hashOfConfig":"20"},{"size":485,"mtime":1619367341735,"results":"23","hashOfConfig":"20"},{"size":159,"mtime":1619367341736,"results":"24","hashOfConfig":"20"},{"size":414,"mtime":1619443125185,"results":"25","hashOfConfig":"20"},{"size":298,"mtime":1619384425795,"results":"26","hashOfConfig":"20"},{"size":925,"mtime":1619367342628,"results":"27","hashOfConfig":"20"},{"size":1281,"mtime":1619444076524,"results":"28","hashOfConfig":"20"},{"size":391,"mtime":1619384340074,"results":"29","hashOfConfig":"20"},{"size":1643,"mtime":1619367342624,"results":"30","hashOfConfig":"20"},{"size":321,"mtime":1619367341747,"results":"31","hashOfConfig":"20"},{"size":478,"mtime":1619367342623,"results":"32","hashOfConfig":"20"},{"size":487,"mtime":1619367342618,"results":"33","hashOfConfig":"20"},{"size":2986,"mtime":1619450681857,"results":"34","hashOfConfig":"20"},{"size":214,"mtime":1619450449787,"results":"35","hashOfConfig":"20"},{"size":958,"mtime":1619384493685,"results":"36","hashOfConfig":"20"},{"size":3714,"mtime":1619450474344,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"15np5im",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},"/Users/Drew/Projects/bakers-math-client/src/index.js",[],["77","78"],"/Users/Drew/Projects/bakers-math-client/src/reportWebVitals.js",[],"/Users/Drew/Projects/bakers-math-client/src/App.js",[],"/Users/Drew/Projects/bakers-math-client/src/AppRoutes/AppRoutes.js",[],"/Users/Drew/Projects/bakers-math-client/src/NavBar/NavBar.js",[],"/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeFormContainer/RecipeFormContainer.js",[],"/Users/Drew/Projects/bakers-math-client/src/RecipeList/RecipeListContainer/RecipeListContainer.js",[],"/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeFormHeader/RecipeFormHeader.js",[],"/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeFormSection/RecipeFormSection.js",[],"/Users/Drew/Projects/bakers-math-client/src/RecipeList/RecipeList/RecipeList.js",[],"/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeFormIngredient/RecipeFormIngredient.js",[],"/Users/Drew/Projects/bakers-math-client/src/RecipeList/RecipeListItem/RecipeListItem.js",[],"/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeFormIngredientName/RecipeFormIngredientName.js",[],"/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeFormIngredientPercent/RecipeFormIngredientPercent.js",[],"/Users/Drew/Projects/bakers-math-client/src/Utilities/APImethods/API_GET.js",[],"/Users/Drew/Projects/bakers-math-client/src/Config.js",["79"],"const endpoint = process.env.REACT_APP_SERVER;\n\nexport default {\n  API_ENDPOINT: endpoint,\n  HEADERS: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`,\n  },\n};\n","/Users/Drew/Projects/bakers-math-client/src/FetchData/FetchData.js",[],"/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeForm/RecipeForm.js",["80"],"import { useEffect, useState } from \"react\";\nimport RecipeFormHeader from \"../RecipeFormHeader/RecipeFormHeader\";\nimport RecipeFormSection from \"../RecipeFormSection/RecipeFormSection\";\nimport { useParams } from \"react-router-dom\";\n\nfunction RecipeForm(props) {\n  const [recipe, setRecipe] = useState({\n    recipe_name: \"\",\n    flour_total: \"\",\n  });\n\n  const [flours, setFlours] = useState([{ name: \"\", percent: \"\", id: \"\" }]);\n  const [ingredients, setIngredients] = useState([\n    { name: \"\", percent: \"\", id: \"\" },\n  ]);\n\n  useEffect(() => {\n    const recipe = props.data[0];\n    const { flours, ingredients } = recipe;\n    setFlours(getArrWithKeyIds(flours));\n    setIngredients(getArrWithKeyIds(ingredients));\n    setRecipe({\n      recipe_name: recipe.recipe_name,\n      flour_total: recipe.flour_total,\n    });\n  }, [props.data]);\n\n  const getArrWithKeyIds = (arr) => {\n    return arr.map((key) => {\n      return { ...key, id: `${key.name}-${key.percent}` };\n    });\n  };\n\n  const handleChangeRecipe = (e) => {\n    setRecipe({ ...recipe, [e.target.name]: e.target.value });\n  };\n\n  const handleChangeIngredient = (e, ingredientType) => {\n    let nameArr = e.target.name.split(\"_\");\n    const propertyName = nameArr[0];\n    const id = parseInt(nameArr[1]);\n    if (ingredientType === \"flour\") updateFlour(e, propertyName, id);\n    else if (ingredientType === \"ingredient\")\n      updateIngredient(e, propertyName, id);\n  };\n\n  const updateIngredient = (e, propertyName, id) => {\n    setIngredients(\n      ingredients.map((key) =>\n        key.id === id ? { ...key, [propertyName]: e.target.value } : key\n      )\n    );\n  };\n\n  const updateFlour = (e, propertyName, id) => {\n    setFlours(\n      flours.map((key) =>\n        key.id === id ? { ...key, [propertyName]: e.target.value } : key\n      )\n    );\n  };\n  const handleSubtractClick = (e, id, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\")\n      setFlours(flours.filter((key) => key.id !== id));\n    else if (ingredientType === \"ingredient\")\n      setIngredients(ingredients.filter((key) => key.id !== id));\n  };\n\n  const handleClickAddIngredient = (e, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\")\n      setFlours([...flours, { name: \"\", percent: \"\", id: Date.now() }]);\n    else if (ingredientType === \"ingredient\")\n      setIngredients([\n        ...ingredients,\n        { name: \"\", percent: \"\", id: Date.now() },\n      ]);\n  };\n\n  const { recipeId } = useParams();\n  return (\n    <form>\n      <RecipeFormHeader\n        recipe={recipe}\n        handleChangeRecipe={(e) => handleChangeRecipe(e)}\n      />\n\n      <hr />\n      <RecipeFormSection\n        sectionName=\"Flour\"\n        recipe={recipe}\n        ingredients={flours}\n        ingredientType=\"flour\"\n        handleClickAddIngredient={(e, ingredientType) =>\n          handleClickAddIngredient(e, ingredientType)\n        }\n        handleChangeIngredient={(e, ingredientType) =>\n          handleChangeIngredient(e, ingredientType)\n        }\n        handleSubtractClick={(e, id, ingredientType) =>\n          handleSubtractClick(e, id, ingredientType)\n        }\n      />\n      <RecipeFormSection\n        sectionName=\"Ingredients\"\n        recipe={recipe}\n        ingredients={ingredients}\n        ingredientType=\"ingredient\"\n        handleClickAddIngredient={(e, ingredientType) =>\n          handleClickAddIngredient(e, ingredientType)\n        }\n        handleChangeIngredient={(e, ingredientType) =>\n          handleChangeIngredient(e, ingredientType)\n        }\n        handleSubtractClick={(e, id, ingredientType) =>\n          handleSubtractClick(e, id, ingredientType)\n        }\n      />\n    </form>\n  );\n}\n\nexport default RecipeForm;\n",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":3,"column":1,"nodeType":"87","endLine":9,"endColumn":3},{"ruleId":"88","severity":1,"message":"89","line":81,"column":11,"nodeType":"90","messageId":"91","endLine":81,"endColumn":19},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'recipeId' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]