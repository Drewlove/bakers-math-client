{"ast":null,"code":"import _regeneratorRuntime from\"/Users/Drew/Projects/bakers-math-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/Drew/Projects/bakers-math-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/Drew/Projects/bakers-math-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/Drew/Projects/bakers-math-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useCallback}from\"react\";import config from\"../../Config\";// import { useAuth0 } from \"@auth0/auth0-react\";\nexport var API_DELETE=function API_DELETE(endpointSuffix,recipeId){var _useState=useState({isDeleting:false,isDeleteError:false,deleteErrorMessage:\"\",recordDeleted:false}),_useState2=_slicedToArray(_useState,2),resDelete=_useState2[0],setResDelete=_useState2[1];//   const { user } = useAuth0();\n//   const userId = user.sub.split(\"|\")[1];\n//   const { getAccessTokenSilently } = useAuth0();\nvar deleteData=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var token,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setResDelete(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isDeleting:true});});_context.prev=1;//   const token = await getAccessTokenSilently();\ntoken=process.env.REACT_APP_API_KEY;_context.next=5;return fetch(// `${config.API_ENDPOINT}/${endpointSuffix}/${userId}/${rowId}`,\n\"\".concat(config.API_ENDPOINT,\"/\").concat(endpointSuffix,\"/\").concat(recipeId),{method:\"DELETE\",headers:{Authorization:\"Bearer \".concat(token),\"Content-Type\":\"application/json\"}});case 5:result=_context.sent;if(result.ok){setResDelete(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isDeleting:false,isDeleteError:false,deleteErrorMessage:\"\",recordDeleted:true});});}else{setResDelete(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isDeleting:false,isDeleteError:true,deleteErrorMessage:\"Failed to delete record.\",recordDeleted:false});});}_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);setResDelete(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isDeleting:false,isDeleteError:true,deleteErrorMessage:\"Unable to delete record.\",recordDeleted:false});});case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);})),[endpointSuffix,recipeId]);return[resDelete,deleteData];};","map":{"version":3,"sources":["/Users/Drew/Projects/bakers-math-client/src/Utilities/APImethods/API_DELETE.js"],"names":["useState","useCallback","config","API_DELETE","endpointSuffix","recipeId","isDeleting","isDeleteError","deleteErrorMessage","recordDeleted","resDelete","setResDelete","deleteData","prevState","token","process","env","REACT_APP_API_KEY","fetch","API_ENDPOINT","method","headers","Authorization","result","ok"],"mappings":"onBAAA,OAASA,QAAT,CAAmBC,WAAnB,KAAsC,OAAtC,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA;AAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,cAAD,CAAiBC,QAAjB,CAA8B,eACpBL,QAAQ,CAAC,CACzCM,UAAU,CAAE,KAD6B,CAEzCC,aAAa,CAAE,KAF0B,CAGzCC,kBAAkB,CAAE,EAHqB,CAIzCC,aAAa,CAAE,KAJ0B,CAAD,CADY,wCAC/CC,SAD+C,eACpCC,YADoC,eAQtD;AACA;AACA;AAEA,GAAMC,CAAAA,UAAU,CAAGX,WAAW,sEAAC,oJAC7BU,YAAY,CAAC,SAACE,SAAD,wCAAqBA,SAArB,MAAgCP,UAAU,CAAE,IAA5C,IAAD,CAAZ,CAD6B,gBAG3B;AACMQ,KAJqB,CAIbC,OAAO,CAACC,GAAR,CAAYC,iBAJC,uBAKNC,CAAAA,KAAK,CACxB;AADwB,UAErBhB,MAAM,CAACiB,YAFc,aAEEf,cAFF,aAEoBC,QAFpB,EAGxB,CACEe,MAAM,CAAE,QADV,CAEEC,OAAO,CAAE,CACPC,aAAa,kBAAYR,KAAZ,CADN,CAEP,eAAgB,kBAFT,CAFX,CAHwB,CALC,QAKrBS,MALqB,eAgB3B,GAAIA,MAAM,CAACC,EAAX,CAAe,CACbb,YAAY,CAAC,SAACE,SAAD,wCACRA,SADQ,MAEXP,UAAU,CAAE,KAFD,CAGXC,aAAa,CAAE,KAHJ,CAIXC,kBAAkB,CAAE,EAJT,CAKXC,aAAa,CAAE,IALJ,IAAD,CAAZ,CAOD,CARD,IAQO,CACLE,YAAY,CAAC,SAACE,SAAD,wCACRA,SADQ,MAEXP,UAAU,CAAE,KAFD,CAGXC,aAAa,CAAE,IAHJ,CAIXC,kBAAkB,CAAE,0BAJT,CAKXC,aAAa,CAAE,KALJ,IAAD,CAAZ,CAOD,CAhC0B,+EAkC3BE,YAAY,CAAC,SAACE,SAAD,wCACRA,SADQ,MAEXP,UAAU,CAAE,KAFD,CAGXC,aAAa,CAAE,IAHJ,CAIXC,kBAAkB,CAAE,0BAJT,CAKXC,aAAa,CAAE,KALJ,IAAD,CAAZ,CAlC2B,oEAAD,GA2C3B,CAACL,cAAD,CAAiBC,QAAjB,CA3C2B,CAA9B,CA4CA,MAAO,CAACK,SAAD,CAAYE,UAAZ,CAAP,CACD,CAzDM","sourcesContent":["import { useState, useCallback } from \"react\";\nimport config from \"../../Config\";\n// import { useAuth0 } from \"@auth0/auth0-react\";\n\nexport const API_DELETE = (endpointSuffix, recipeId) => {\n  const [resDelete, setResDelete] = useState({\n    isDeleting: false,\n    isDeleteError: false,\n    deleteErrorMessage: \"\",\n    recordDeleted: false,\n  });\n\n  //   const { user } = useAuth0();\n  //   const userId = user.sub.split(\"|\")[1];\n  //   const { getAccessTokenSilently } = useAuth0();\n\n  const deleteData = useCallback(async () => {\n    setResDelete((prevState) => ({ ...prevState, isDeleting: true }));\n    try {\n      //   const token = await getAccessTokenSilently();\n      const token = process.env.REACT_APP_API_KEY;\n      const result = await fetch(\n        // `${config.API_ENDPOINT}/${endpointSuffix}/${userId}/${rowId}`,\n        `${config.API_ENDPOINT}/${endpointSuffix}/${recipeId}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      if (result.ok) {\n        setResDelete((prevState) => ({\n          ...prevState,\n          isDeleting: false,\n          isDeleteError: false,\n          deleteErrorMessage: \"\",\n          recordDeleted: true,\n        }));\n      } else {\n        setResDelete((prevState) => ({\n          ...prevState,\n          isDeleting: false,\n          isDeleteError: true,\n          deleteErrorMessage: \"Failed to delete record.\",\n          recordDeleted: false,\n        }));\n      }\n    } catch (error) {\n      setResDelete((prevState) => ({\n        ...prevState,\n        isDeleting: false,\n        isDeleteError: true,\n        deleteErrorMessage: \"Unable to delete record.\",\n        recordDeleted: false,\n      }));\n    }\n    //   }, [endpointSuffix, userId, getAccessTokenSilently, rowId]);\n  }, [endpointSuffix, recipeId]);\n  return [resDelete, deleteData];\n};\n"]},"metadata":{},"sourceType":"module"}