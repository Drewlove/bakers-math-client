{"ast":null,"code":"import React from\"react\";import RecipeFormIngredientName from\"../RecipeFormIngredientName/RecipeFormIngredientName\";import RecipeFormIngredientPercent from\"../RecipeFormIngredientPercent/RecipeFormIngredientPercent\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function RecipeFormIngredient(props){var renderSubtractButton=function renderSubtractButton(){var id=props.id;return/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(e){return props.handleSubtractClick(e,id);},className:\"recipe__button_delete\",children:\"-\"});};var getWeight=function getWeight(){var weight=props.flourTotal*(props.ingredientPercentValue/100);weight=isNaN(weight)||!isFinite(weight)?\"\":weight.toFixed(1);return/*#__PURE__*/_jsxs(\"p\",{className:\"recipe-ingredient-container__calc-weight-value\",children:[weight,\" g\"]});};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-ingredient-container\",children:[/*#__PURE__*/_jsx(RecipeFormIngredientName,{inputName:\"name_\".concat(props.id),ingredientTextValue:props.ingredientTextValue,handleChangeIngredient:function handleChangeIngredient(e){return props.handleChangeIngredient(e);}}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-ingredient-percent-wt-btn-container\",children:[/*#__PURE__*/_jsx(RecipeFormIngredientPercent,{inputName:\"percent_\".concat(props.id),ingredientPercentValue:props.ingredientPercentValue,handleChangeIngredient:function handleChangeIngredient(e){return props.handleChangeIngredient(e);}}),/*#__PURE__*/_jsx(\"div\",{className:\"recipe-ingredient-container__calc-weight-div\",children:getWeight()}),/*#__PURE__*/_jsx(\"div\",{children:renderSubtractButton()})]})]})});}export default RecipeFormIngredient;","map":{"version":3,"sources":["/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeFormIngredient/RecipeFormIngredient.js"],"names":["React","RecipeFormIngredientName","RecipeFormIngredientPercent","RecipeFormIngredient","props","renderSubtractButton","id","e","handleSubtractClick","getWeight","weight","flourTotal","ingredientPercentValue","isNaN","isFinite","toFixed","ingredientTextValue","handleChangeIngredient"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,wBAAP,KAAqC,sDAArC,CACA,MAAOC,CAAAA,2BAAP,KAAwC,4DAAxC,C,6IAEA,QAASC,CAAAA,oBAAT,CAA8BC,KAA9B,CAAqC,CACnC,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACjC,GAAMC,CAAAA,EAAE,CAAGF,KAAK,CAACE,EAAjB,CACA,mBACE,eACE,OAAO,CAAE,iBAACC,CAAD,QAAOH,CAAAA,KAAK,CAACI,mBAAN,CAA0BD,CAA1B,CAA6BD,EAA7B,CAAP,EADX,CAEE,SAAS,CAAC,uBAFZ,eADF,CAQD,CAVD,CAYA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAIC,CAAAA,MAAM,CAAGN,KAAK,CAACO,UAAN,EAAoBP,KAAK,CAACQ,sBAAN,CAA+B,GAAnD,CAAb,CACAF,MAAM,CAAGG,KAAK,CAACH,MAAD,CAAL,EAAiB,CAACI,QAAQ,CAACJ,MAAD,CAA1B,CAAqC,EAArC,CAA0CA,MAAM,CAACK,OAAP,CAAe,CAAf,CAAnD,CAEA,mBACE,WAAG,SAAS,CAAC,gDAAb,WACGL,MADH,QADF,CAKD,CATD,CAWA,mBACE,sCACE,aAAK,SAAS,CAAC,6BAAf,wBACE,KAAC,wBAAD,EACE,SAAS,gBAAUN,KAAK,CAACE,EAAhB,CADX,CAEE,mBAAmB,CAAEF,KAAK,CAACY,mBAF7B,CAGE,sBAAsB,CAAE,gCAACT,CAAD,QAAOH,CAAAA,KAAK,CAACa,sBAAN,CAA6BV,CAA7B,CAAP,EAH1B,EADF,cAME,aAAK,SAAS,CAAC,4CAAf,wBACE,KAAC,2BAAD,EACE,SAAS,mBAAaH,KAAK,CAACE,EAAnB,CADX,CAEE,sBAAsB,CAAEF,KAAK,CAACQ,sBAFhC,CAGE,sBAAsB,CAAE,gCAACL,CAAD,QAAOH,CAAAA,KAAK,CAACa,sBAAN,CAA6BV,CAA7B,CAAP,EAH1B,EADF,cAOE,YAAK,SAAS,CAAC,8CAAf,UACGE,SAAS,EADZ,EAPF,cAUE,qBAAMJ,oBAAoB,EAA1B,EAVF,GANF,GADF,EADF,CAuBD,CAED,cAAeF,CAAAA,oBAAf","sourcesContent":["import React from \"react\";\nimport RecipeFormIngredientName from \"../RecipeFormIngredientName/RecipeFormIngredientName\";\nimport RecipeFormIngredientPercent from \"../RecipeFormIngredientPercent/RecipeFormIngredientPercent\";\n\nfunction RecipeFormIngredient(props) {\n  const renderSubtractButton = () => {\n    const id = props.id;\n    return (\n      <button\n        onClick={(e) => props.handleSubtractClick(e, id)}\n        className=\"recipe__button_delete\"\n      >\n        -\n      </button>\n    );\n  };\n\n  const getWeight = () => {\n    let weight = props.flourTotal * (props.ingredientPercentValue / 100);\n    weight = isNaN(weight) || !isFinite(weight) ? \"\" : weight.toFixed(1);\n\n    return (\n      <p className=\"recipe-ingredient-container__calc-weight-value\">\n        {weight} g\n      </p>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"recipe-ingredient-container\">\n        <RecipeFormIngredientName\n          inputName={`name_${props.id}`}\n          ingredientTextValue={props.ingredientTextValue}\n          handleChangeIngredient={(e) => props.handleChangeIngredient(e)}\n        />\n        <div className=\"recipe-ingredient-percent-wt-btn-container\">\n          <RecipeFormIngredientPercent\n            inputName={`percent_${props.id}`}\n            ingredientPercentValue={props.ingredientPercentValue}\n            handleChangeIngredient={(e) => props.handleChangeIngredient(e)}\n          />\n\n          <div className=\"recipe-ingredient-container__calc-weight-div\">\n            {getWeight()}\n          </div>\n          <div>{renderSubtractButton()}</div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default RecipeFormIngredient;\n"]},"metadata":{},"sourceType":"module"}