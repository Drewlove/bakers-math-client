{"ast":null,"code":"var _jsxFileName = \"/Users/Drew/Projects/bakers-math/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport RecipeIngredientContainer from \"./RecipeIngredientContainer/RecipeIngredientContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [recipe, setRecipe] = useState({\n    recipe_name: \"\",\n    flour_total: 0 // ingredientsFlour: 1,\n    // ingredientsOther: 1,\n    // ingredient_0_name: \"\",\n    // ingredient_0_percent: 0,\n    // ingredient_1_name: \"\",\n    // ingredient_1_percent: 0,\n    // ingredient_2_name: \"\",\n    // ingredient_2_percent: 0,\n    // ingredient_3_name: \"\",\n    // ingredient_3_percent: 0,\n    // ingredient_4_name: \"\",\n    // ingredient_4_percent: 0,\n    // ingredient_5_name: \"\",\n    // ingredient_5_percent: 0,\n    // ingredient_6_name: \"\",\n    // ingredient_6_percent: 0,\n    // ingredient_7_name: \"\",\n    // ingredient_7_percent: 0,\n    // ingredient_8_name: \"\",\n    // ingredient_8_percent: 0,\n    // ingredient_9_name: \"\",\n    // ingredient_9_percent: 0,\n\n  });\n  const [flours, setFlour] = useState([{\n    name: \"\",\n    percent: \"\",\n    id: Date.now()\n  }]);\n  const [ingredients, setIngredients] = useState([{\n    \"\": 0\n  }]); // const renderIngredients = () => {\n  //   let arr = new Array(recipe.ingredientsOther).fill(\"\");\n  //   console.log(arr);\n  //   return arr.map((key, i) => {\n  //     let textValue = recipe[`ingredient_${i}_name`];\n  //     let percentValue = recipe[`ingredient_${i}_percent`];\n  //     return (\n  //       <RecipeIngredientContainer\n  //         key={i}\n  //         handleChange={(e) => handleChange(e)}\n  //         handleSubtractClick={(ingredientType) =>\n  //           handleSubtractClick(ingredientType)\n  //         }\n  //         ingredientTextName={`ingredient_${i}_name`}\n  //         ingredientTextValue={textValue}\n  //         ingredientPercentName={`ingredient_${i}_percent`}\n  //         ingredientPercentValue={percentValue}\n  //       />\n  //     );\n  //   });\n  // };\n\n  const handleChangeFlours = e => {\n    let id = e.target.name.split(\"_\")[1];\n    console.log(e.target.name, e.target.value);\n    console.log(flours);\n    let things = flours.map(key => key[id] === id ? { ...key,\n      [e.target.name]: e.target.value\n    } : key);\n    console.log(things); // this.setState({\n    //   data: this.state.data.map(el => (el.id === id ? {...el, text} : el))\n    // });\n    // setFlours({ ...recipe, [e.target.name]: e.target.value });\n  };\n\n  const renderFlours = () => {\n    return flours.map((key, i) => {\n      const idProperty = Object.keys(key)[1];\n      const idValue = key[idProperty];\n      const ingredientTextValue = key.name;\n      const ingredientPercentValue = key.percent;\n      return /*#__PURE__*/_jsxDEV(RecipeIngredientContainer, {\n        id: idValue,\n        ingredientCount: i,\n        ingredientTextValue: ingredientTextValue,\n        ingredientPercentValue: ingredientPercentValue,\n        handleChange: e => handleChangeFlours(e) // handleSubtractClick={(ingredientType) =>\n        //   handleSubtractClick(ingredientType)\n        // }\n\n      }, idValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this);\n    });\n  }; // const handleAddClick = (e, ingredientType) => {\n  //   e.preventDefault();\n  //   let ingredient = recipe[ingredientType];\n  //   ingredient += 1;\n  //   setRecipe({ ...recipe, [ingredientType]: ingredient });\n  // };\n  // const handleSubtractClick = (ingredientType) => {\n  //   let ingredient = recipe[ingredientType];\n  //   ingredient -= 1;\n  //   setRecipe({ ...recipe, [ingredientType]: ingredient });\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"recipe\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          className: \"recipe-container__legend\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"recipe__input_heading\",\n          type: \"text\",\n          placeholder: \"Sourdough\",\n          value: recipe.recipe_name,\n          name: \"recipe_name\" // onChange={(e) => handleChange(e)}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          className: \"recipe-container__legend\",\n          children: \"Total Flour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"recipe__input_heading\",\n          type: \"number\",\n          placeholder: \"g\",\n          value: recipe.flour_total,\n          name: \"flour_total\" // onChange={(e) => handleChange(e)}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"recipe-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"recipe-banner-text\",\n          children: \"Flour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), renderFlours()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HZwfoCZ9o+34h2PkP0AQdT21mR8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Drew/Projects/bakers-math/src/App.js"],"names":["useState","RecipeIngredientContainer","App","recipe","setRecipe","recipe_name","flour_total","flours","setFlour","name","percent","id","Date","now","ingredients","setIngredients","handleChangeFlours","e","target","split","console","log","value","things","map","key","renderFlours","i","idProperty","Object","keys","idValue","ingredientTextValue","ingredientPercentValue"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport RecipeIngredientContainer from \"./RecipeIngredientContainer/RecipeIngredientContainer\";\n\nfunction App() {\n  const [recipe, setRecipe] = useState({\n    recipe_name: \"\",\n    flour_total: 0,\n    // ingredientsFlour: 1,\n    // ingredientsOther: 1,\n    // ingredient_0_name: \"\",\n    // ingredient_0_percent: 0,\n    // ingredient_1_name: \"\",\n    // ingredient_1_percent: 0,\n    // ingredient_2_name: \"\",\n    // ingredient_2_percent: 0,\n    // ingredient_3_name: \"\",\n    // ingredient_3_percent: 0,\n    // ingredient_4_name: \"\",\n    // ingredient_4_percent: 0,\n    // ingredient_5_name: \"\",\n    // ingredient_5_percent: 0,\n    // ingredient_6_name: \"\",\n    // ingredient_6_percent: 0,\n    // ingredient_7_name: \"\",\n    // ingredient_7_percent: 0,\n    // ingredient_8_name: \"\",\n    // ingredient_8_percent: 0,\n    // ingredient_9_name: \"\",\n    // ingredient_9_percent: 0,\n  });\n\n  const [flours, setFlour] = useState([\n    { name: \"\", percent: \"\", id: Date.now() },\n  ]);\n  const [ingredients, setIngredients] = useState([{ \"\": 0 }]);\n\n  // const renderIngredients = () => {\n  //   let arr = new Array(recipe.ingredientsOther).fill(\"\");\n  //   console.log(arr);\n\n  //   return arr.map((key, i) => {\n  //     let textValue = recipe[`ingredient_${i}_name`];\n  //     let percentValue = recipe[`ingredient_${i}_percent`];\n  //     return (\n  //       <RecipeIngredientContainer\n  //         key={i}\n  //         handleChange={(e) => handleChange(e)}\n  //         handleSubtractClick={(ingredientType) =>\n  //           handleSubtractClick(ingredientType)\n  //         }\n  //         ingredientTextName={`ingredient_${i}_name`}\n  //         ingredientTextValue={textValue}\n  //         ingredientPercentName={`ingredient_${i}_percent`}\n  //         ingredientPercentValue={percentValue}\n  //       />\n  //     );\n  //   });\n  // };\n\n  const handleChangeFlours = (e) => {\n    let id = e.target.name.split(\"_\")[1];\n    console.log(e.target.name, e.target.value);\n    console.log(flours);\n\n    let things = flours.map((key) =>\n      key[id] === id ? { ...key, [e.target.name]: e.target.value } : key\n    );\n    console.log(things);\n\n    // this.setState({\n    //   data: this.state.data.map(el => (el.id === id ? {...el, text} : el))\n    // });\n    // setFlours({ ...recipe, [e.target.name]: e.target.value });\n  };\n\n  const renderFlours = () => {\n    return flours.map((key, i) => {\n      const idProperty = Object.keys(key)[1];\n      const idValue = key[idProperty];\n      const ingredientTextValue = key.name;\n      const ingredientPercentValue = key.percent;\n      return (\n        <RecipeIngredientContainer\n          key={idValue}\n          id={idValue}\n          ingredientCount={i}\n          ingredientTextValue={ingredientTextValue}\n          ingredientPercentValue={ingredientPercentValue}\n          handleChange={(e) => handleChangeFlours(e)}\n          // handleSubtractClick={(ingredientType) =>\n          //   handleSubtractClick(ingredientType)\n          // }\n        />\n      );\n    });\n  };\n\n  // const handleAddClick = (e, ingredientType) => {\n  //   e.preventDefault();\n  //   let ingredient = recipe[ingredientType];\n  //   ingredient += 1;\n  //   setRecipe({ ...recipe, [ingredientType]: ingredient });\n  // };\n\n  // const handleSubtractClick = (ingredientType) => {\n  //   let ingredient = recipe[ingredientType];\n  //   ingredient -= 1;\n  //   setRecipe({ ...recipe, [ingredientType]: ingredient });\n  // };\n\n  return (\n    <main className=\"recipe\">\n      <form>\n        <div className=\"recipe-container\">\n          <legend className=\"recipe-container__legend\">Name</legend>\n          <input\n            className=\"recipe__input_heading\"\n            type=\"text\"\n            placeholder=\"Sourdough\"\n            value={recipe.recipe_name}\n            name=\"recipe_name\"\n            // onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div className=\"recipe-container\">\n          <legend className=\"recipe-container__legend\">Total Flour</legend>\n          <input\n            className=\"recipe__input_heading\"\n            type=\"number\"\n            placeholder=\"g\"\n            value={recipe.flour_total}\n            name=\"flour_total\"\n            // onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <hr />\n        <section className=\"recipe-section\">\n          <p className=\"recipe-banner-text\">Flour</p>\n          {renderFlours()}\n        </section>\n        {/* <section>\n          <p className=\"recipe-banner-text\">Ingredients</p>\n          {renderIngredients()}\n          <button\n            className=\"recipe-button_add\"\n            onClick={(e) => handleAddClick(e, \"ingredientsOther\")}\n          >\n            Add\n          </button>\n        </section> */}\n      </form>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}