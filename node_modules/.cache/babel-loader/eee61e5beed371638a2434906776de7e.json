{"ast":null,"code":"var _jsxFileName = \"/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeForm/RecipeForm.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport RecipeFormHeader from \"../RecipeFormHeader/RecipeFormHeader\";\nimport RecipeFormSection from \"../RecipeFormSection/RecipeFormSection\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RecipeForm(props) {\n  _s();\n\n  const [recipe, setRecipe] = useState({\n    recipe_name: \"\",\n    flour_total: \"\"\n  });\n  const [flours, setFlours] = useState([{\n    name: \"\",\n    percent: \"\",\n    id: \"\"\n  }]);\n  const [ingredients, setIngredients] = useState([{\n    name: \"\",\n    percent: \"\",\n    id: \"\"\n  }]);\n  const {\n    recipeId\n  } = useParams();\n  useEffect(() => {\n    if (recipeId !== \"new\") {\n      const recipe = props.data[0];\n      const {\n        flours,\n        ingredients\n      } = recipe;\n      setFlours(getArrWithKeyIds(flours));\n      setIngredients(getArrWithKeyIds(ingredients));\n      setRecipe({\n        recipe_name: recipe.recipe_name,\n        flour_total: recipe.flour_total\n      });\n    }\n  }, [props.data]);\n\n  const getArrWithKeyIds = arr => {\n    return arr.map(key => {\n      return { ...key,\n        id: `${key.name}-${key.percent}`\n      };\n    });\n  };\n\n  const handleChangeRecipe = e => {\n    setRecipe({ ...recipe,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleChangeIngredient = (e, ingredientType) => {\n    let nameArr = e.target.name.split(\"_\");\n    const propertyName = nameArr[0];\n    const id = parseInt(nameArr[1]);\n    if (ingredientType === \"flour\") updateFlour(e, propertyName, id);else if (ingredientType === \"ingredient\") updateIngredient(e, propertyName, id);\n  };\n\n  const updateIngredient = (e, propertyName, id) => {\n    setIngredients(ingredients.map(key => key.id === id ? { ...key,\n      [propertyName]: e.target.value\n    } : key));\n  };\n\n  const updateFlour = (e, propertyName, id) => {\n    setFlours(flours.map(key => key.id === id ? { ...key,\n      [propertyName]: e.target.value\n    } : key));\n  };\n\n  const handleSubtractClick = (e, id, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\") setFlours(flours.filter(key => key.id !== id));else if (ingredientType === \"ingredient\") setIngredients(ingredients.filter(key => key.id !== id));\n  };\n\n  const handleClickAddIngredient = (e, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\") setFlours([...flours, {\n      name: \"\",\n      percent: \"\",\n      id: Date.now()\n    }]);else if (ingredientType === \"ingredient\") setIngredients([...ingredients, {\n      name: \"\",\n      percent: \"\",\n      id: Date.now()\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(RecipeFormHeader, {\n      recipe: recipe,\n      handleChangeRecipe: e => handleChangeRecipe(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecipeFormSection, {\n      sectionName: \"Flour\",\n      recipe: recipe,\n      ingredients: flours,\n      ingredientType: \"flour\",\n      handleClickAddIngredient: (e, ingredientType) => handleClickAddIngredient(e, ingredientType),\n      handleChangeIngredient: (e, ingredientType) => handleChangeIngredient(e, ingredientType),\n      handleSubtractClick: (e, id, ingredientType) => handleSubtractClick(e, id, ingredientType)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecipeFormSection, {\n      sectionName: \"Ingredients\",\n      recipe: recipe,\n      ingredients: ingredients,\n      ingredientType: \"ingredient\",\n      handleClickAddIngredient: (e, ingredientType) => handleClickAddIngredient(e, ingredientType),\n      handleChangeIngredient: (e, ingredientType) => handleChangeIngredient(e, ingredientType),\n      handleSubtractClick: (e, id, ingredientType) => handleSubtractClick(e, id, ingredientType)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecipeForm, \"jHpAclV6Vuh5S+iKrBtLY31JYZU=\", false, function () {\n  return [useParams];\n});\n\n_c = RecipeForm;\nexport default RecipeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeForm\");","map":{"version":3,"sources":["/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeForm/RecipeForm.js"],"names":["useEffect","useState","RecipeFormHeader","RecipeFormSection","useParams","RecipeForm","props","recipe","setRecipe","recipe_name","flour_total","flours","setFlours","name","percent","id","ingredients","setIngredients","recipeId","data","getArrWithKeyIds","arr","map","key","handleChangeRecipe","e","target","value","handleChangeIngredient","ingredientType","nameArr","split","propertyName","parseInt","updateFlour","updateIngredient","handleSubtractClick","preventDefault","filter","handleClickAddIngredient","Date","now"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport RecipeFormHeader from \"../RecipeFormHeader/RecipeFormHeader\";\nimport RecipeFormSection from \"../RecipeFormSection/RecipeFormSection\";\nimport { useParams } from \"react-router-dom\";\n\nfunction RecipeForm(props) {\n  const [recipe, setRecipe] = useState({\n    recipe_name: \"\",\n    flour_total: \"\",\n  });\n\n  const [flours, setFlours] = useState([{ name: \"\", percent: \"\", id: \"\" }]);\n  const [ingredients, setIngredients] = useState([\n    { name: \"\", percent: \"\", id: \"\" },\n  ]);\n\n  const { recipeId } = useParams();\n\n  useEffect(() => {\n    if (recipeId !== \"new\") {\n      const recipe = props.data[0];\n      const { flours, ingredients } = recipe;\n      setFlours(getArrWithKeyIds(flours));\n      setIngredients(getArrWithKeyIds(ingredients));\n      setRecipe({\n        recipe_name: recipe.recipe_name,\n        flour_total: recipe.flour_total,\n      });\n    }\n  }, [props.data]);\n\n  const getArrWithKeyIds = (arr) => {\n    return arr.map((key) => {\n      return { ...key, id: `${key.name}-${key.percent}` };\n    });\n  };\n\n  const handleChangeRecipe = (e) => {\n    setRecipe({ ...recipe, [e.target.name]: e.target.value });\n  };\n\n  const handleChangeIngredient = (e, ingredientType) => {\n    let nameArr = e.target.name.split(\"_\");\n    const propertyName = nameArr[0];\n    const id = parseInt(nameArr[1]);\n    if (ingredientType === \"flour\") updateFlour(e, propertyName, id);\n    else if (ingredientType === \"ingredient\")\n      updateIngredient(e, propertyName, id);\n  };\n\n  const updateIngredient = (e, propertyName, id) => {\n    setIngredients(\n      ingredients.map((key) =>\n        key.id === id ? { ...key, [propertyName]: e.target.value } : key\n      )\n    );\n  };\n\n  const updateFlour = (e, propertyName, id) => {\n    setFlours(\n      flours.map((key) =>\n        key.id === id ? { ...key, [propertyName]: e.target.value } : key\n      )\n    );\n  };\n  const handleSubtractClick = (e, id, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\")\n      setFlours(flours.filter((key) => key.id !== id));\n    else if (ingredientType === \"ingredient\")\n      setIngredients(ingredients.filter((key) => key.id !== id));\n  };\n\n  const handleClickAddIngredient = (e, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\")\n      setFlours([...flours, { name: \"\", percent: \"\", id: Date.now() }]);\n    else if (ingredientType === \"ingredient\")\n      setIngredients([\n        ...ingredients,\n        { name: \"\", percent: \"\", id: Date.now() },\n      ]);\n  };\n\n  return (\n    <form>\n      <RecipeFormHeader\n        recipe={recipe}\n        handleChangeRecipe={(e) => handleChangeRecipe(e)}\n      />\n\n      <hr />\n      <RecipeFormSection\n        sectionName=\"Flour\"\n        recipe={recipe}\n        ingredients={flours}\n        ingredientType=\"flour\"\n        handleClickAddIngredient={(e, ingredientType) =>\n          handleClickAddIngredient(e, ingredientType)\n        }\n        handleChangeIngredient={(e, ingredientType) =>\n          handleChangeIngredient(e, ingredientType)\n        }\n        handleSubtractClick={(e, id, ingredientType) =>\n          handleSubtractClick(e, id, ingredientType)\n        }\n      />\n      <RecipeFormSection\n        sectionName=\"Ingredients\"\n        recipe={recipe}\n        ingredients={ingredients}\n        ingredientType=\"ingredient\"\n        handleClickAddIngredient={(e, ingredientType) =>\n          handleClickAddIngredient(e, ingredientType)\n        }\n        handleChangeIngredient={(e, ingredientType) =>\n          handleChangeIngredient(e, ingredientType)\n        }\n        handleSubtractClick={(e, id, ingredientType) =>\n          handleSubtractClick(e, id, ingredientType)\n        }\n      />\n    </form>\n  );\n}\n\nexport default RecipeForm;\n"]},"metadata":{},"sourceType":"module"}