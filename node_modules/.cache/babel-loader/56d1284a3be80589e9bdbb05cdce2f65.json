{"ast":null,"code":"var _jsxFileName = \"/Users/Drew/Projects/bakers-math-client/src/App.js\";\nimport \"./App.css\";\nimport Recipe from \"./Recipe/Recipe\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Recipe, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n} // import { useState } from \"react\";\n// import RecipeIngredientContainer from \"./RecipeIngredientContainer/RecipeIngredientContainer\";\n// function App() {\n//   const [recipe, setRecipe] = useState({\n//     recipe_name: \"\",\n//     flour_total: 0,\n//   });\n//   const [flours, setFlours] = useState([\n//     { name: \"\", percent: \"\", id: Date.now() },\n//   ]);\n//   const [ingredients, setIngredients] = useState([\n//     { name: \"\", percent: \"\", id: Date.now() },\n//   ]);\n//   const handleChangeRecipe = (e) => {\n//     setRecipe({ ...recipe, [e.target.name]: e.target.value });\n//   };\n//   const handleChangeIngredient = (e, ingredientType) => {\n//     let nameArr = e.target.name.split(\"_\");\n//     const propertyName = nameArr[0];\n//     const id = parseInt(nameArr[1]);\n//     if (ingredientType === \"flour\") updateFlour(e, propertyName, id);\n//     else if (ingredientType === \"ingredient\")\n//       updateIngredient(e, propertyName, id);\n//   };\n//   const updateIngredient = (e, propertyName, id) => {\n//     setIngredients(\n//       ingredients.map((key) =>\n//         key.id === id ? { ...key, [propertyName]: e.target.value } : key\n//       )\n//     );\n//   };\n//   const updateFlour = (e, propertyName, id) => {\n//     setFlours(\n//       flours.map((key) =>\n//         key.id === id ? { ...key, [propertyName]: e.target.value } : key\n//       )\n//     );\n//   };\n//   const renderIngredients = (arr, ingredientType) => {\n//     return arr.map((key, i) => {\n//       const id = key.id;\n//       return (\n//         <RecipeIngredientContainer\n//           key={id}\n//           id={id}\n//           flourTotal={recipe.flour_total}\n//           ingredientCount={i}\n//           ingredientTextValue={key.name}\n//           ingredientPercentValue={key.percent}\n//           handleChangeIngredient={(e) =>\n//             handleChangeIngredient(e, ingredientType)\n//           }\n//           handleSubtractClick={(e, id) =>\n//             handleSubtractClick(e, id, ingredientType)\n//           }\n//         />\n//       );\n//     });\n//   };\n//   const handleSubtractClick = (e, id, ingredientType) => {\n//     e.preventDefault();\n//     if (ingredientType === \"flour\")\n//       setFlours(flours.filter((key) => key.id !== id));\n//     else if (ingredientType === \"ingredient\")\n//       setIngredients(ingredients.filter((key) => key.id !== id));\n//   };\n//   const handleAddClickIngredient = (e, ingredientType) => {\n//     e.preventDefault();\n//     if (ingredientType === \"flour\")\n//       setFlours([...flours, { name: \"\", percent: \"\", id: Date.now() }]);\n//     else if (ingredientType === \"ingredient\")\n//       setIngredients([\n//         ...ingredients,\n//         { name: \"\", percent: \"\", id: Date.now() },\n//       ]);\n//   };\n//   return (\n//     <main className=\"recipe\">\n//       <form>\n//         <header className=\"recipe-header\">\n//           <div className=\"recipe-container\">\n//             <legend className=\"recipe-container__legend\">Name</legend>\n//             <input\n//               className=\"recipe__input_heading\"\n//               type=\"text\"\n//               placeholder=\"Recipe Name\"\n//               value={recipe.recipe_name}\n//               name=\"recipe_name\"\n//               onChange={(e) => handleChangeRecipe(e)}\n//             />\n//           </div>\n//           <div className=\"recipe-container\">\n//             <legend className=\"recipe-container__legend\">\n//               Total Flour (g)\n//             </legend>\n//             <input\n//               className=\"recipe__input_heading\"\n//               type=\"number\"\n//               placeholder=\"0\"\n//               value={recipe.flour_total}\n//               name=\"flour_total\"\n//               onChange={(e) => handleChangeRecipe(e)}\n//             />\n//           </div>\n//         </header>\n//         <hr />\n//         <section className=\"recipe-section\">\n//           <div className=\"recipe-banner\">\n//             <p className=\"recipe-banner__text\">Flour</p>\n//             <button\n//               className=\"recipe-button_add\"\n//               // onClick={(e) => handleAddClickFlour(e)}\n//               onClick={(e) => handleAddClickIngredient(e, \"flour\")}\n//             >\n//               Add\n//             </button>\n//           </div>\n//           {renderIngredients(flours, \"flour\")}\n//         </section>\n//         <section className=\"recipe-section recipe-section_ingredients\">\n//           <div className=\"recipe-banner\">\n//             <p className=\"recipe-banner__text\">Ingredients</p>\n//             <button\n//               className=\"recipe-button_add\"\n//               // onClick={(e) => handleAddClickIngredients(e)}\n//               onClick={(e) => handleAddClickIngredient(e, \"ingredient\")}\n//             >\n//               Add\n//             </button>\n//           </div>\n//           {renderIngredients(ingredients, \"ingredient\")}\n//         </section>\n//       </form>\n//     </main>\n//   );\n// }\n// export default App;\n\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Drew/Projects/bakers-math-client/src/App.js"],"names":["Recipe","App"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,iBAAnB;;;AAEA,SAASC,GAAT,GAAe;AACb,sBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CACD;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;KAtJSA,G","sourcesContent":["import \"./App.css\";\nimport Recipe from \"./Recipe/Recipe\";\n\nfunction App() {\n  return <Recipe />;\n}\n// import { useState } from \"react\";\n// import RecipeIngredientContainer from \"./RecipeIngredientContainer/RecipeIngredientContainer\";\n\n// function App() {\n//   const [recipe, setRecipe] = useState({\n//     recipe_name: \"\",\n//     flour_total: 0,\n//   });\n\n//   const [flours, setFlours] = useState([\n//     { name: \"\", percent: \"\", id: Date.now() },\n//   ]);\n//   const [ingredients, setIngredients] = useState([\n//     { name: \"\", percent: \"\", id: Date.now() },\n//   ]);\n\n//   const handleChangeRecipe = (e) => {\n//     setRecipe({ ...recipe, [e.target.name]: e.target.value });\n//   };\n\n//   const handleChangeIngredient = (e, ingredientType) => {\n//     let nameArr = e.target.name.split(\"_\");\n//     const propertyName = nameArr[0];\n//     const id = parseInt(nameArr[1]);\n//     if (ingredientType === \"flour\") updateFlour(e, propertyName, id);\n//     else if (ingredientType === \"ingredient\")\n//       updateIngredient(e, propertyName, id);\n//   };\n\n//   const updateIngredient = (e, propertyName, id) => {\n//     setIngredients(\n//       ingredients.map((key) =>\n//         key.id === id ? { ...key, [propertyName]: e.target.value } : key\n//       )\n//     );\n//   };\n\n//   const updateFlour = (e, propertyName, id) => {\n//     setFlours(\n//       flours.map((key) =>\n//         key.id === id ? { ...key, [propertyName]: e.target.value } : key\n//       )\n//     );\n//   };\n\n//   const renderIngredients = (arr, ingredientType) => {\n//     return arr.map((key, i) => {\n//       const id = key.id;\n//       return (\n//         <RecipeIngredientContainer\n//           key={id}\n//           id={id}\n//           flourTotal={recipe.flour_total}\n//           ingredientCount={i}\n//           ingredientTextValue={key.name}\n//           ingredientPercentValue={key.percent}\n//           handleChangeIngredient={(e) =>\n//             handleChangeIngredient(e, ingredientType)\n//           }\n//           handleSubtractClick={(e, id) =>\n//             handleSubtractClick(e, id, ingredientType)\n//           }\n//         />\n//       );\n//     });\n//   };\n\n//   const handleSubtractClick = (e, id, ingredientType) => {\n//     e.preventDefault();\n//     if (ingredientType === \"flour\")\n//       setFlours(flours.filter((key) => key.id !== id));\n//     else if (ingredientType === \"ingredient\")\n//       setIngredients(ingredients.filter((key) => key.id !== id));\n//   };\n\n//   const handleAddClickIngredient = (e, ingredientType) => {\n//     e.preventDefault();\n//     if (ingredientType === \"flour\")\n//       setFlours([...flours, { name: \"\", percent: \"\", id: Date.now() }]);\n//     else if (ingredientType === \"ingredient\")\n//       setIngredients([\n//         ...ingredients,\n//         { name: \"\", percent: \"\", id: Date.now() },\n//       ]);\n//   };\n\n//   return (\n//     <main className=\"recipe\">\n//       <form>\n//         <header className=\"recipe-header\">\n//           <div className=\"recipe-container\">\n//             <legend className=\"recipe-container__legend\">Name</legend>\n//             <input\n//               className=\"recipe__input_heading\"\n//               type=\"text\"\n//               placeholder=\"Recipe Name\"\n//               value={recipe.recipe_name}\n//               name=\"recipe_name\"\n//               onChange={(e) => handleChangeRecipe(e)}\n//             />\n//           </div>\n//           <div className=\"recipe-container\">\n//             <legend className=\"recipe-container__legend\">\n//               Total Flour (g)\n//             </legend>\n//             <input\n//               className=\"recipe__input_heading\"\n//               type=\"number\"\n//               placeholder=\"0\"\n//               value={recipe.flour_total}\n//               name=\"flour_total\"\n//               onChange={(e) => handleChangeRecipe(e)}\n//             />\n//           </div>\n//         </header>\n//         <hr />\n//         <section className=\"recipe-section\">\n//           <div className=\"recipe-banner\">\n//             <p className=\"recipe-banner__text\">Flour</p>\n//             <button\n//               className=\"recipe-button_add\"\n//               // onClick={(e) => handleAddClickFlour(e)}\n//               onClick={(e) => handleAddClickIngredient(e, \"flour\")}\n//             >\n//               Add\n//             </button>\n//           </div>\n//           {renderIngredients(flours, \"flour\")}\n//         </section>\n//         <section className=\"recipe-section recipe-section_ingredients\">\n//           <div className=\"recipe-banner\">\n//             <p className=\"recipe-banner__text\">Ingredients</p>\n//             <button\n//               className=\"recipe-button_add\"\n//               // onClick={(e) => handleAddClickIngredients(e)}\n//               onClick={(e) => handleAddClickIngredient(e, \"ingredient\")}\n//             >\n//               Add\n//             </button>\n//           </div>\n//           {renderIngredients(ingredients, \"ingredient\")}\n//         </section>\n//       </form>\n//     </main>\n//   );\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}