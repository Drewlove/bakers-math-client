{"ast":null,"code":"var _jsxFileName = \"/Users/Drew/Projects/bakers-math-client/src/RecipeContainer/RecipeContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Recipe from \"../Recipe/Recipe\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RecipeContainer() {\n  _s();\n\n  const [recipe, setRecipe] = useState({\n    recipe_name: \"\",\n    flour_total: \"\"\n  });\n  const [flours, setFlours] = useState([{\n    name: \"\",\n    percent: \"\",\n    id: Date.now()\n  }]);\n  const [ingredients, setIngredients] = useState([{\n    name: \"\",\n    percent: \"\",\n    id: Date.now()\n  }]);\n\n  const handleChangeRecipe = e => {\n    setRecipe({ ...recipe,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleChangeIngredient = (e, ingredientType) => {\n    let nameArr = e.target.name.split(\"_\");\n    const propertyName = nameArr[0];\n    const id = parseInt(nameArr[1]);\n    if (ingredientType === \"flour\") updateFlour(e, propertyName, id);else if (ingredientType === \"ingredient\") updateIngredient(e, propertyName, id);\n  };\n\n  const updateIngredient = (e, propertyName, id) => {\n    setIngredients(ingredients.map(key => key.id === id ? { ...key,\n      [propertyName]: e.target.value\n    } : key));\n  };\n\n  const updateFlour = (e, propertyName, id) => {\n    setFlours(flours.map(key => key.id === id ? { ...key,\n      [propertyName]: e.target.value\n    } : key));\n  };\n\n  const renderIngredients = (arr, ingredientType) => {\n    return arr.map((key, i) => {\n      const id = key.id;\n      return /*#__PURE__*/_jsxDEV(RecipeIngredientContainer, {\n        id: id,\n        flourTotal: recipe.flour_total,\n        ingredientCount: i,\n        ingredientTextValue: key.name,\n        ingredientPercentValue: key.percent,\n        handleChangeIngredient: e => handleChangeIngredient(e, ingredientType),\n        handleSubtractClick: (e, id) => handleSubtractClick(e, id, ingredientType)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const handleSubtractClick = (e, id, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\") setFlours(flours.filter(key => key.id !== id));else if (ingredientType === \"ingredient\") setIngredients(ingredients.filter(key => key.id !== id));\n  };\n\n  const handleAddClickIngredient = (e, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\") setFlours([...flours, {\n      name: \"\",\n      percent: \"\",\n      id: Date.now()\n    }]);else if (ingredientType === \"ingredient\") setIngredients([...ingredients, {\n      name: \"\",\n      percent: \"\",\n      id: Date.now()\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"recipe\",\n    children: [/*#__PURE__*/_jsxDEV(Recipe, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"recipe-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"recipe-container__legend\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"recipe__input_heading\",\n            type: \"text\",\n            placeholder: \"Recipe Name\",\n            value: recipe.recipe_name,\n            name: \"recipe_name\",\n            onChange: e => handleChangeRecipe(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"recipe-container__legend\",\n            children: \"Total Flour (g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"recipe__input_heading\",\n            type: \"number\",\n            placeholder: \"0\",\n            value: recipe.flour_total,\n            name: \"flour_total\",\n            onChange: e => handleChangeRecipe(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"recipe-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-banner\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"recipe-banner__text\",\n            children: \"Flour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"recipe-button_add\",\n            onClick: e => handleAddClickIngredient(e, \"flour\"),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), renderIngredients(flours, \"flour\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"recipe-section recipe-section_ingredients\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-banner\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"recipe-banner__text\",\n            children: \"Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"recipe-button_add\",\n            onClick: e => handleAddClickIngredient(e, \"ingredient\"),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), renderIngredients(ingredients, \"ingredient\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecipeContainer, \"VeJPa4hekres+9Wo8P/2K7PW7JQ=\");\n\n_c = RecipeContainer;\nexport default RecipeContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeContainer\");","map":{"version":3,"sources":["/Users/Drew/Projects/bakers-math-client/src/RecipeContainer/RecipeContainer.js"],"names":["useState","Recipe","RecipeContainer","recipe","setRecipe","recipe_name","flour_total","flours","setFlours","name","percent","id","Date","now","ingredients","setIngredients","handleChangeRecipe","e","target","value","handleChangeIngredient","ingredientType","nameArr","split","propertyName","parseInt","updateFlour","updateIngredient","map","key","renderIngredients","arr","i","handleSubtractClick","preventDefault","filter","handleAddClickIngredient"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport Recipe from \"../Recipe/Recipe\";\n\nfunction RecipeContainer() {\n  const [recipe, setRecipe] = useState({\n    recipe_name: \"\",\n    flour_total: \"\",\n  });\n\n  const [flours, setFlours] = useState([\n    { name: \"\", percent: \"\", id: Date.now() },\n  ]);\n  const [ingredients, setIngredients] = useState([\n    { name: \"\", percent: \"\", id: Date.now() },\n  ]);\n\n  const handleChangeRecipe = (e) => {\n    setRecipe({ ...recipe, [e.target.name]: e.target.value });\n  };\n\n  const handleChangeIngredient = (e, ingredientType) => {\n    let nameArr = e.target.name.split(\"_\");\n    const propertyName = nameArr[0];\n    const id = parseInt(nameArr[1]);\n    if (ingredientType === \"flour\") updateFlour(e, propertyName, id);\n    else if (ingredientType === \"ingredient\")\n      updateIngredient(e, propertyName, id);\n  };\n\n  const updateIngredient = (e, propertyName, id) => {\n    setIngredients(\n      ingredients.map((key) =>\n        key.id === id ? { ...key, [propertyName]: e.target.value } : key\n      )\n    );\n  };\n\n  const updateFlour = (e, propertyName, id) => {\n    setFlours(\n      flours.map((key) =>\n        key.id === id ? { ...key, [propertyName]: e.target.value } : key\n      )\n    );\n  };\n\n  const renderIngredients = (arr, ingredientType) => {\n    return arr.map((key, i) => {\n      const id = key.id;\n      return (\n        <RecipeIngredientContainer\n          key={id}\n          id={id}\n          flourTotal={recipe.flour_total}\n          ingredientCount={i}\n          ingredientTextValue={key.name}\n          ingredientPercentValue={key.percent}\n          handleChangeIngredient={(e) =>\n            handleChangeIngredient(e, ingredientType)\n          }\n          handleSubtractClick={(e, id) =>\n            handleSubtractClick(e, id, ingredientType)\n          }\n        />\n      );\n    });\n  };\n\n  const handleSubtractClick = (e, id, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\")\n      setFlours(flours.filter((key) => key.id !== id));\n    else if (ingredientType === \"ingredient\")\n      setIngredients(ingredients.filter((key) => key.id !== id));\n  };\n\n  const handleAddClickIngredient = (e, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\")\n      setFlours([...flours, { name: \"\", percent: \"\", id: Date.now() }]);\n    else if (ingredientType === \"ingredient\")\n      setIngredients([\n        ...ingredients,\n        { name: \"\", percent: \"\", id: Date.now() },\n      ]);\n  };\n\n  return (\n    <main className=\"recipe\">\n      <Recipe />\n      <form>\n        <header className=\"recipe-header\">\n          <div className=\"recipe-container\">\n            <legend className=\"recipe-container__legend\">Name</legend>\n            <input\n              className=\"recipe__input_heading\"\n              type=\"text\"\n              placeholder=\"Recipe Name\"\n              value={recipe.recipe_name}\n              name=\"recipe_name\"\n              onChange={(e) => handleChangeRecipe(e)}\n            />\n          </div>\n          <div className=\"recipe-container\">\n            <legend className=\"recipe-container__legend\">\n              Total Flour (g)\n            </legend>\n            <input\n              className=\"recipe__input_heading\"\n              type=\"number\"\n              placeholder=\"0\"\n              value={recipe.flour_total}\n              name=\"flour_total\"\n              onChange={(e) => handleChangeRecipe(e)}\n            />\n          </div>\n        </header>\n        <hr />\n        <section className=\"recipe-section\">\n          <div className=\"recipe-banner\">\n            <p className=\"recipe-banner__text\">Flour</p>\n            <button\n              className=\"recipe-button_add\"\n              onClick={(e) => handleAddClickIngredient(e, \"flour\")}\n            >\n              Add\n            </button>\n          </div>\n          {renderIngredients(flours, \"flour\")}\n        </section>\n        <section className=\"recipe-section recipe-section_ingredients\">\n          <div className=\"recipe-banner\">\n            <p className=\"recipe-banner__text\">Ingredients</p>\n            <button\n              className=\"recipe-button_add\"\n              onClick={(e) => handleAddClickIngredient(e, \"ingredient\")}\n            >\n              Add\n            </button>\n          </div>\n          {renderIngredients(ingredients, \"ingredient\")}\n        </section>\n      </form>\n    </main>\n  );\n}\n\nexport default RecipeContainer;\n"]},"metadata":{},"sourceType":"module"}