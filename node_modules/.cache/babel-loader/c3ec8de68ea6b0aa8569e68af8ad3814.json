{"ast":null,"code":"var _jsxFileName = \"/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeFormContainer/RecipeFormContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport RecipeFormHeader from \"../RecipeFormHeader/RecipeFormHeader\";\nimport RecipeFormSection from \"../RecipeFormSection/RecipeFormSection\";\nimport FetchData from \"../../FetchData/FetchData\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RecipeFormContainer() {\n  _s();\n\n  const [recipe, setRecipe] = useState({\n    recipe_name: \"\",\n    flour_total: \"\"\n  });\n  const [flours, setFlours] = useState([{\n    name: \"\",\n    percent: \"\",\n    id: Date.now()\n  }]);\n  const [ingredients, setIngredients] = useState([{\n    name: \"\",\n    percent: \"\",\n    id: Date.now()\n  }]);\n\n  const handleChangeRecipe = e => {\n    setRecipe({ ...recipe,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  let {\n    recipeId\n  } = useParams();\n  console.log(recipeId);\n\n  const handleChangeIngredient = (e, ingredientType) => {\n    console.log(e, ingredientType);\n    let nameArr = e.target.name.split(\"_\");\n    const propertyName = nameArr[0];\n    const id = parseInt(nameArr[1]);\n    if (ingredientType === \"flour\") updateFlour(e, propertyName, id);else if (ingredientType === \"ingredient\") updateIngredient(e, propertyName, id);\n  };\n\n  const updateIngredient = (e, propertyName, id) => {\n    setIngredients(ingredients.map(key => key.id === id ? { ...key,\n      [propertyName]: e.target.value\n    } : key));\n  };\n\n  const updateFlour = (e, propertyName, id) => {\n    setFlours(flours.map(key => key.id === id ? { ...key,\n      [propertyName]: e.target.value\n    } : key));\n  };\n\n  const handleSubtractClick = (e, id, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\") setFlours(flours.filter(key => key.id !== id));else if (ingredientType === \"ingredient\") setIngredients(ingredients.filter(key => key.id !== id));\n  };\n\n  const handleClickAddIngredient = (e, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\") setFlours([...flours, {\n      name: \"\",\n      percent: \"\",\n      id: Date.now()\n    }]);else if (ingredientType === \"ingredient\") setIngredients([...ingredients, {\n      name: \"\",\n      percent: \"\",\n      id: Date.now()\n    }]);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <FetchData endpointArr={[\"recipes\"]}>\n    _jsxDEV(\"form\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this) // </FetchData>\n\n  );\n}\n\n_s(RecipeFormContainer, \"lA2kgLWMp3U9/ka4v9K0q462iJc=\", false, function () {\n  return [useParams];\n});\n\n_c = RecipeFormContainer;\nexport default RecipeFormContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeFormContainer\");","map":{"version":3,"sources":["/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeFormContainer/RecipeFormContainer.js"],"names":["useState","RecipeFormHeader","RecipeFormSection","FetchData","useParams","RecipeFormContainer","recipe","setRecipe","recipe_name","flour_total","flours","setFlours","name","percent","id","Date","now","ingredients","setIngredients","handleChangeRecipe","e","target","value","recipeId","console","log","handleChangeIngredient","ingredientType","nameArr","split","propertyName","parseInt","updateFlour","updateIngredient","map","key","handleSubtractClick","preventDefault","filter","handleClickAddIngredient"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport RecipeFormHeader from \"../RecipeFormHeader/RecipeFormHeader\";\nimport RecipeFormSection from \"../RecipeFormSection/RecipeFormSection\";\nimport FetchData from \"../../FetchData/FetchData\";\nimport { useParams } from \"react-router-dom\";\n\nfunction RecipeFormContainer() {\n  const [recipe, setRecipe] = useState({\n    recipe_name: \"\",\n    flour_total: \"\",\n  });\n\n  const [flours, setFlours] = useState([\n    { name: \"\", percent: \"\", id: Date.now() },\n  ]);\n  const [ingredients, setIngredients] = useState([\n    { name: \"\", percent: \"\", id: Date.now() },\n  ]);\n\n  const handleChangeRecipe = (e) => {\n    setRecipe({ ...recipe, [e.target.name]: e.target.value });\n  };\n\n  let { recipeId } = useParams();\n  console.log(recipeId);\n\n  const handleChangeIngredient = (e, ingredientType) => {\n    console.log(e, ingredientType);\n    let nameArr = e.target.name.split(\"_\");\n    const propertyName = nameArr[0];\n    const id = parseInt(nameArr[1]);\n    if (ingredientType === \"flour\") updateFlour(e, propertyName, id);\n    else if (ingredientType === \"ingredient\")\n      updateIngredient(e, propertyName, id);\n  };\n\n  const updateIngredient = (e, propertyName, id) => {\n    setIngredients(\n      ingredients.map((key) =>\n        key.id === id ? { ...key, [propertyName]: e.target.value } : key\n      )\n    );\n  };\n\n  const updateFlour = (e, propertyName, id) => {\n    setFlours(\n      flours.map((key) =>\n        key.id === id ? { ...key, [propertyName]: e.target.value } : key\n      )\n    );\n  };\n  const handleSubtractClick = (e, id, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\")\n      setFlours(flours.filter((key) => key.id !== id));\n    else if (ingredientType === \"ingredient\")\n      setIngredients(ingredients.filter((key) => key.id !== id));\n  };\n\n  const handleClickAddIngredient = (e, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\")\n      setFlours([...flours, { name: \"\", percent: \"\", id: Date.now() }]);\n    else if (ingredientType === \"ingredient\")\n      setIngredients([\n        ...ingredients,\n        { name: \"\", percent: \"\", id: Date.now() },\n      ]);\n  };\n\n  return (\n    // <FetchData endpointArr={[\"recipes\"]}>\n    <form>\n      {/* <RecipeFormHeader\n        recipe={recipe}\n        handleChangeRecipe={(e) => handleChangeRecipe(e)}\n      />\n\n      <hr />\n      <RecipeFormSection\n        sectionName=\"Flour\"\n        recipe={recipe}\n        ingredients={flours}\n        ingredientType=\"flour\"\n        handleClickAddIngredient={(e, ingredientType) =>\n          handleClickAddIngredient(e, ingredientType)\n        }\n        handleChangeIngredient={(e, ingredientType) =>\n          handleChangeIngredient(e, ingredientType)\n        }\n        handleSubtractClick={(e, id, ingredientType) =>\n          handleSubtractClick(e, id, ingredientType)\n        }\n      />\n      <RecipeFormSection\n        sectionName=\"Ingredients\"\n        recipe={recipe}\n        ingredients={ingredients}\n        ingredientType=\"ingredient\"\n        handleClickAddIngredient={(e, ingredientType) =>\n          handleClickAddIngredient(e, ingredientType)\n        }\n        handleChangeIngredient={(e, ingredientType) =>\n          handleChangeIngredient(e, ingredientType)\n        }\n        handleSubtractClick={(e, id, ingredientType) =>\n          handleSubtractClick(e, id, ingredientType)\n        }\n      /> */}\n    </form>\n    // </FetchData>\n  );\n}\n\nexport default RecipeFormContainer;\n"]},"metadata":{},"sourceType":"module"}