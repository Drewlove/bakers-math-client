{"ast":null,"code":"import React from\"react\";import RecipeIngredientName from\"../RecipeIngredientName/RecipeIngredientName\";import RecipeIngredientPercent from\"../RecipeIngredientPercent/RecipeIngredientPercent\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function RecipeIngredientContainer(props){var renderSubtractButton=function renderSubtractButton(){var id=props.id;return/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(e){return props.handleSubtractClick(e,id);},className:\"recipe__button_delete\",children:\"-\"});};var getWeight=function getWeight(){var weight=props.flourTotal*(props.ingredientPercentValue/100);weight=isNaN(weight)||!isFinite(weight)?\"\":weight.toFixed(1);return/*#__PURE__*/_jsxs(\"p\",{className:\"recipe-ingredient-container__calc-weight-value\",children:[weight,\" g\"]});};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-ingredient-container\",children:[/*#__PURE__*/_jsx(RecipeIngredientName,{inputName:\"name_\".concat(props.id),ingredientTextValue:props.ingredientTextValue,handleChange:function handleChange(e){return props.handleChange(e);}}),/*#__PURE__*/_jsx(RecipeIngredientPercent,{inputName:\"percent_\".concat(props.id),ingredientPercentValue:props.ingredientPercentValue,handleChange:function handleChange(e){return props.handleChange(e);}}),/*#__PURE__*/_jsx(\"div\",{className:\"recipe-ingredient-container__calc-weight-div\",children:getWeight()}),/*#__PURE__*/_jsx(\"div\",{children:renderSubtractButton()})]})});}export default RecipeIngredientContainer;","map":{"version":3,"sources":["/Users/Drew/Projects/bakers-math-client/src/RecipeIngredientContainer/RecipeIngredientContainer.js"],"names":["React","RecipeIngredientName","RecipeIngredientPercent","RecipeIngredientContainer","props","renderSubtractButton","id","e","handleSubtractClick","getWeight","weight","flourTotal","ingredientPercentValue","isNaN","isFinite","toFixed","ingredientTextValue","handleChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,8CAAjC,CACA,MAAOC,CAAAA,uBAAP,KAAoC,oDAApC,C,6IAEA,QAASC,CAAAA,yBAAT,CAAmCC,KAAnC,CAA0C,CACxC,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACjC,GAAMC,CAAAA,EAAE,CAAGF,KAAK,CAACE,EAAjB,CACA,mBACE,eACE,OAAO,CAAE,iBAACC,CAAD,QAAOH,CAAAA,KAAK,CAACI,mBAAN,CAA0BD,CAA1B,CAA6BD,EAA7B,CAAP,EADX,CAEE,SAAS,CAAC,uBAFZ,eADF,CAQD,CAVD,CAYA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAIC,CAAAA,MAAM,CAAGN,KAAK,CAACO,UAAN,EAAoBP,KAAK,CAACQ,sBAAN,CAA+B,GAAnD,CAAb,CACAF,MAAM,CAAGG,KAAK,CAACH,MAAD,CAAL,EAAiB,CAACI,QAAQ,CAACJ,MAAD,CAA1B,CAAqC,EAArC,CAA0CA,MAAM,CAACK,OAAP,CAAe,CAAf,CAAnD,CAEA,mBACE,WAAG,SAAS,CAAC,gDAAb,WACGL,MADH,QADF,CAKD,CATD,CAWA,mBACE,sCACE,aAAK,SAAS,CAAC,6BAAf,wBACE,KAAC,oBAAD,EACE,SAAS,gBAAUN,KAAK,CAACE,EAAhB,CADX,CAEE,mBAAmB,CAAEF,KAAK,CAACY,mBAF7B,CAGE,YAAY,CAAE,sBAACT,CAAD,QAAOH,CAAAA,KAAK,CAACa,YAAN,CAAmBV,CAAnB,CAAP,EAHhB,EADF,cAME,KAAC,uBAAD,EACE,SAAS,mBAAaH,KAAK,CAACE,EAAnB,CADX,CAEE,sBAAsB,CAAEF,KAAK,CAACQ,sBAFhC,CAGE,YAAY,CAAE,sBAACL,CAAD,QAAOH,CAAAA,KAAK,CAACa,YAAN,CAAmBV,CAAnB,CAAP,EAHhB,EANF,cAYE,YAAK,SAAS,CAAC,8CAAf,UACGE,SAAS,EADZ,EAZF,cAeE,qBAAMJ,oBAAoB,EAA1B,EAfF,GADF,EADF,CAqBD,CAED,cAAeF,CAAAA,yBAAf","sourcesContent":["import React from \"react\";\nimport RecipeIngredientName from \"../RecipeIngredientName/RecipeIngredientName\";\nimport RecipeIngredientPercent from \"../RecipeIngredientPercent/RecipeIngredientPercent\";\n\nfunction RecipeIngredientContainer(props) {\n  const renderSubtractButton = () => {\n    const id = props.id;\n    return (\n      <button\n        onClick={(e) => props.handleSubtractClick(e, id)}\n        className=\"recipe__button_delete\"\n      >\n        -\n      </button>\n    );\n  };\n\n  const getWeight = () => {\n    let weight = props.flourTotal * (props.ingredientPercentValue / 100);\n    weight = isNaN(weight) || !isFinite(weight) ? \"\" : weight.toFixed(1);\n\n    return (\n      <p className=\"recipe-ingredient-container__calc-weight-value\">\n        {weight} g\n      </p>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"recipe-ingredient-container\">\n        <RecipeIngredientName\n          inputName={`name_${props.id}`}\n          ingredientTextValue={props.ingredientTextValue}\n          handleChange={(e) => props.handleChange(e)}\n        />\n        <RecipeIngredientPercent\n          inputName={`percent_${props.id}`}\n          ingredientPercentValue={props.ingredientPercentValue}\n          handleChange={(e) => props.handleChange(e)}\n        />\n\n        <div className=\"recipe-ingredient-container__calc-weight-div\">\n          {getWeight()}\n        </div>\n        <div>{renderSubtractButton()}</div>\n      </div>\n    </>\n  );\n}\n\nexport default RecipeIngredientContainer;\n"]},"metadata":{},"sourceType":"module"}