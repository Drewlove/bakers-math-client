{"ast":null,"code":"var _jsxFileName = \"/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeForm/RecipeForm.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport RecipeFormHeader from \"../RecipeFormHeader/RecipeFormHeader\";\nimport RecipeFormSection from \"../RecipeFormSection/RecipeFormSection\";\nimport FormSaveButton from \"../../CommonFormComponents/FormSaveButton/FormSaveButton\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RecipeForm(props) {\n  _s();\n\n  const [recipe, setRecipe] = useState({\n    recipe_name: \"\",\n    flour_total: \"\"\n  });\n  const [flours, setFlours] = useState([{\n    name: \"\",\n    percent: \"\",\n    id: \"\"\n  }]);\n  const [ingredients, setIngredients] = useState([{\n    name: \"\",\n    percent: \"\",\n    id: \"\"\n  }]);\n  const {\n    recipeId\n  } = useParams();\n  useEffect(() => {\n    if (recipeId !== \"new\") {\n      const recipe = props.data[0];\n      const {\n        flours,\n        ingredients\n      } = recipe;\n      setFlours(flours);\n      setIngredients(ingredients);\n      setRecipe({\n        recipe_name: recipe.recipe_name,\n        flour_total: recipe.flour_total\n      });\n    } else {\n      setFlours([{\n        name: \"\",\n        percent: \"\",\n        id: generateStringId()\n      }]);\n      setIngredients([{\n        name: \"\",\n        percent: \"\",\n        id: generateStringId()\n      }]);\n      setRecipe({\n        recipe_name: \"\",\n        flour_total: \"\"\n      });\n    }\n  }, [props.data, recipeId]);\n\n  const handleChangeRecipe = e => {\n    setRecipe({ ...recipe,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleChangeIngredient = (e, ingredientType) => {\n    console.log(\"name:\", e.target.name);\n    let nameArr = e.target.name.split(\"-\");\n    const propertyName = nameArr[0];\n    const id = nameArr[1];\n    if (ingredientType === \"flour\") updateFlour(e, propertyName, id);else if (ingredientType === \"ingredient\") updateIngredient(e, propertyName, id);\n  };\n\n  const updateIngredient = (e, propertyName, id) => {\n    setIngredients(ingredients.map(key => {\n      console.log(\"key.id:\", key.id, \"id:\", id);\n      return key.id === id ? { ...key,\n        [propertyName]: e.target.value\n      } : key;\n    }));\n  };\n\n  const updateFlour = (e, propertyName, id) => {\n    setFlours(flours.map(key => {\n      console.log(\"key.id:\", key.id, \"id:\", id);\n      return key.id === id ? { ...key,\n        [propertyName]: e.target.value\n      } : key;\n    }));\n  };\n\n  const handleSubtractClick = (e, id, ingredientType) => {\n    e.preventDefault();\n    console.log(id, ingredientType); // if (ingredientType === \"flour\")\n    //   setFlours(\n    //     flours.filter((key) => {\n    //       console.log(key.id, id);\n    //       return key.id !== id;\n    //     })\n    //   );\n    // else if (ingredientType === \"ingredient\")\n    //   setIngredients(ingredients.filter((key) => key.id !== id));\n  };\n\n  const handleClickAddIngredient = (e, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\") setFlours([...flours, {\n      name: \"\",\n      percent: \"\",\n      id: generateStringId()\n    }]);else if (ingredientType === \"ingredient\") setIngredients([...ingredients, {\n      name: \"\",\n      percent: \"\",\n      id: generateStringId()\n    }]);\n  };\n\n  const generateStringId = () => {\n    return Date.now().toString();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(RecipeFormHeader, {\n      recipe: recipe,\n      handleChangeRecipe: e => handleChangeRecipe(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecipeFormSection, {\n      sectionName: \"Flour\",\n      recipe: recipe,\n      ingredients: flours,\n      ingredientType: \"flour\",\n      handleClickAddIngredient: (e, ingredientType) => handleClickAddIngredient(e, ingredientType),\n      handleChangeIngredient: (e, ingredientType) => handleChangeIngredient(e, ingredientType),\n      handleSubtractClick: (e, id, ingredientType) => handleSubtractClick(e, id, ingredientType)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecipeFormSection, {\n      sectionName: \"Ingredients\",\n      recipe: recipe,\n      ingredients: ingredients,\n      ingredientType: \"ingredient\",\n      handleClickAddIngredient: (e, ingredientType) => handleClickAddIngredient(e, ingredientType),\n      handleChangeIngredient: (e, ingredientType) => handleChangeIngredient(e, ingredientType),\n      handleSubtractClick: (e, id, ingredientType) => handleSubtractClick(e, id, ingredientType)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormSaveButton, {\n      formData: {\n        recipe_name: recipe.recipe_name,\n        flour_total: recipe.flour_total,\n        flours: flours,\n        ingredients: ingredients\n      },\n      formName: \"recipe\",\n      endpointSuffix: \"recipes\",\n      redirectSuffix: \"/\",\n      rowId: recipeId // setFormError={setFormError}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecipeForm, \"jHpAclV6Vuh5S+iKrBtLY31JYZU=\", false, function () {\n  return [useParams];\n});\n\n_c = RecipeForm;\nexport default RecipeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeForm\");","map":{"version":3,"sources":["/Users/Drew/Projects/bakers-math-client/src/RecipeForm/RecipeForm/RecipeForm.js"],"names":["useEffect","useState","RecipeFormHeader","RecipeFormSection","FormSaveButton","useParams","RecipeForm","props","recipe","setRecipe","recipe_name","flour_total","flours","setFlours","name","percent","id","ingredients","setIngredients","recipeId","data","generateStringId","handleChangeRecipe","e","target","value","handleChangeIngredient","ingredientType","console","log","nameArr","split","propertyName","updateFlour","updateIngredient","map","key","handleSubtractClick","preventDefault","handleClickAddIngredient","Date","now","toString"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport RecipeFormHeader from \"../RecipeFormHeader/RecipeFormHeader\";\nimport RecipeFormSection from \"../RecipeFormSection/RecipeFormSection\";\nimport FormSaveButton from \"../../CommonFormComponents/FormSaveButton/FormSaveButton\";\nimport { useParams } from \"react-router-dom\";\n\nfunction RecipeForm(props) {\n  const [recipe, setRecipe] = useState({\n    recipe_name: \"\",\n    flour_total: \"\",\n  });\n\n  const [flours, setFlours] = useState([{ name: \"\", percent: \"\", id: \"\" }]);\n  const [ingredients, setIngredients] = useState([\n    { name: \"\", percent: \"\", id: \"\" },\n  ]);\n\n  const { recipeId } = useParams();\n\n  useEffect(() => {\n    if (recipeId !== \"new\") {\n      const recipe = props.data[0];\n      const { flours, ingredients } = recipe;\n      setFlours(flours);\n      setIngredients(ingredients);\n      setRecipe({\n        recipe_name: recipe.recipe_name,\n        flour_total: recipe.flour_total,\n      });\n    } else {\n      setFlours([{ name: \"\", percent: \"\", id: generateStringId() }]);\n      setIngredients([{ name: \"\", percent: \"\", id: generateStringId() }]);\n      setRecipe({ recipe_name: \"\", flour_total: \"\" });\n    }\n  }, [props.data, recipeId]);\n\n  const handleChangeRecipe = (e) => {\n    setRecipe({ ...recipe, [e.target.name]: e.target.value });\n  };\n\n  const handleChangeIngredient = (e, ingredientType) => {\n    console.log(\"name:\", e.target.name);\n    let nameArr = e.target.name.split(\"-\");\n    const propertyName = nameArr[0];\n    const id = nameArr[1];\n    if (ingredientType === \"flour\") updateFlour(e, propertyName, id);\n    else if (ingredientType === \"ingredient\")\n      updateIngredient(e, propertyName, id);\n  };\n\n  const updateIngredient = (e, propertyName, id) => {\n    setIngredients(\n      ingredients.map((key) => {\n        console.log(\"key.id:\", key.id, \"id:\", id);\n        return key.id === id ? { ...key, [propertyName]: e.target.value } : key;\n      })\n    );\n  };\n\n  const updateFlour = (e, propertyName, id) => {\n    setFlours(\n      flours.map((key) => {\n        console.log(\"key.id:\", key.id, \"id:\", id);\n        return key.id === id ? { ...key, [propertyName]: e.target.value } : key;\n      })\n    );\n  };\n  const handleSubtractClick = (e, id, ingredientType) => {\n    e.preventDefault();\n    console.log(id, ingredientType);\n    // if (ingredientType === \"flour\")\n    //   setFlours(\n    //     flours.filter((key) => {\n    //       console.log(key.id, id);\n    //       return key.id !== id;\n    //     })\n    //   );\n    // else if (ingredientType === \"ingredient\")\n    //   setIngredients(ingredients.filter((key) => key.id !== id));\n  };\n\n  const handleClickAddIngredient = (e, ingredientType) => {\n    e.preventDefault();\n    if (ingredientType === \"flour\")\n      setFlours([...flours, { name: \"\", percent: \"\", id: generateStringId() }]);\n    else if (ingredientType === \"ingredient\")\n      setIngredients([\n        ...ingredients,\n        { name: \"\", percent: \"\", id: generateStringId() },\n      ]);\n  };\n\n  const generateStringId = () => {\n    return Date.now().toString();\n  };\n\n  return (\n    <form>\n      <RecipeFormHeader\n        recipe={recipe}\n        handleChangeRecipe={(e) => handleChangeRecipe(e)}\n      />\n\n      <hr />\n      <RecipeFormSection\n        sectionName=\"Flour\"\n        recipe={recipe}\n        ingredients={flours}\n        ingredientType=\"flour\"\n        handleClickAddIngredient={(e, ingredientType) =>\n          handleClickAddIngredient(e, ingredientType)\n        }\n        handleChangeIngredient={(e, ingredientType) =>\n          handleChangeIngredient(e, ingredientType)\n        }\n        handleSubtractClick={(e, id, ingredientType) =>\n          handleSubtractClick(e, id, ingredientType)\n        }\n      />\n      <RecipeFormSection\n        sectionName=\"Ingredients\"\n        recipe={recipe}\n        ingredients={ingredients}\n        ingredientType=\"ingredient\"\n        handleClickAddIngredient={(e, ingredientType) =>\n          handleClickAddIngredient(e, ingredientType)\n        }\n        handleChangeIngredient={(e, ingredientType) =>\n          handleChangeIngredient(e, ingredientType)\n        }\n        handleSubtractClick={(e, id, ingredientType) =>\n          handleSubtractClick(e, id, ingredientType)\n        }\n      />\n      <FormSaveButton\n        formData={{\n          recipe_name: recipe.recipe_name,\n          flour_total: recipe.flour_total,\n          flours: flours,\n          ingredients: ingredients,\n        }}\n        formName=\"recipe\"\n        endpointSuffix=\"recipes\"\n        redirectSuffix=\"/\"\n        rowId={recipeId}\n        // setFormError={setFormError}\n      />\n    </form>\n  );\n}\n\nexport default RecipeForm;\n"]},"metadata":{},"sourceType":"module"}