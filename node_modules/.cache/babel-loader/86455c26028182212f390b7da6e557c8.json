{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport config from \"../../Config\"; // import { useAuth0 } from \"@auth0/auth0-react\";\n\nexport const API_DELETE = (endpointSuffix, rowId) => {\n  _s();\n\n  const [resDelete, setResDelete] = useState({\n    isDeleting: false,\n    isDeleteError: false,\n    deleteErrorMessage: \"\",\n    recordDeleted: false\n  }); //   const { user } = useAuth0();\n  //   const userId = user.sub.split(\"|\")[1];\n  //   const { getAccessTokenSilently } = useAuth0();\n\n  const deleteData = useCallback(async () => {\n    setResDelete(prevState => ({ ...prevState,\n      isDeleting: true\n    }));\n\n    try {\n      const token = await getAccessTokenSilently();\n      const result = await fetch(`${config.API_ENDPOINT}/${endpointSuffix}/${userId}/${rowId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      if (result.ok) {\n        setResDelete(prevState => ({ ...prevState,\n          isDeleting: false,\n          isDeleteError: false,\n          deleteErrorMessage: \"\",\n          recordDeleted: true\n        }));\n      } else {\n        setResDelete(prevState => ({ ...prevState,\n          isDeleting: false,\n          isDeleteError: true,\n          deleteErrorMessage: \"Failed to delete record.\",\n          recordDeleted: false\n        }));\n      }\n    } catch (error) {\n      setResDelete(prevState => ({ ...prevState,\n        isDeleting: false,\n        isDeleteError: true,\n        deleteErrorMessage: \"Unable to delete record.\",\n        recordDeleted: false\n      }));\n    }\n  }, [endpointSuffix, userId, getAccessTokenSilently, rowId]);\n  return [resDelete, deleteData];\n};\n\n_s(API_DELETE, \"1GCVDi16FglqfQ5UA49quWXofbU=\");\n\n_c = API_DELETE;\n\nvar _c;\n\n$RefreshReg$(_c, \"API_DELETE\");","map":{"version":3,"sources":["/Users/Drew/Projects/bakers-math-client/src/Utilities/APImethods/API_DELETE.js"],"names":["useState","useCallback","config","API_DELETE","endpointSuffix","rowId","resDelete","setResDelete","isDeleting","isDeleteError","deleteErrorMessage","recordDeleted","deleteData","prevState","token","getAccessTokenSilently","result","fetch","API_ENDPOINT","userId","method","headers","Authorization","ok","error"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,cAAD,EAAiBC,KAAjB,KAA2B;AAAA;;AACnD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC;AACzCQ,IAAAA,UAAU,EAAE,KAD6B;AAEzCC,IAAAA,aAAa,EAAE,KAF0B;AAGzCC,IAAAA,kBAAkB,EAAE,EAHqB;AAIzCC,IAAAA,aAAa,EAAE;AAJ0B,GAAD,CAA1C,CADmD,CAQnD;AACA;AACA;;AAEA,QAAMC,UAAU,GAAGX,WAAW,CAAC,YAAY;AACzCM,IAAAA,YAAY,CAAEM,SAAD,KAAgB,EAAE,GAAGA,SAAL;AAAgBL,MAAAA,UAAU,EAAE;AAA5B,KAAhB,CAAD,CAAZ;;AACA,QAAI;AACF,YAAMM,KAAK,GAAG,MAAMC,sBAAsB,EAA1C;AACA,YAAMC,MAAM,GAAG,MAAMC,KAAK,CACvB,GAAEf,MAAM,CAACgB,YAAa,IAAGd,cAAe,IAAGe,MAAO,IAAGd,KAAM,EADpC,EAExB;AACEe,QAAAA,MAAM,EAAE,QADV;AAEEC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASR,KAAM,EADxB;AAEP,0BAAgB;AAFT;AAFX,OAFwB,CAA1B;;AAUA,UAAIE,MAAM,CAACO,EAAX,EAAe;AACbhB,QAAAA,YAAY,CAAEM,SAAD,KAAgB,EAC3B,GAAGA,SADwB;AAE3BL,UAAAA,UAAU,EAAE,KAFe;AAG3BC,UAAAA,aAAa,EAAE,KAHY;AAI3BC,UAAAA,kBAAkB,EAAE,EAJO;AAK3BC,UAAAA,aAAa,EAAE;AALY,SAAhB,CAAD,CAAZ;AAOD,OARD,MAQO;AACLJ,QAAAA,YAAY,CAAEM,SAAD,KAAgB,EAC3B,GAAGA,SADwB;AAE3BL,UAAAA,UAAU,EAAE,KAFe;AAG3BC,UAAAA,aAAa,EAAE,IAHY;AAI3BC,UAAAA,kBAAkB,EAAE,0BAJO;AAK3BC,UAAAA,aAAa,EAAE;AALY,SAAhB,CAAD,CAAZ;AAOD;AACF,KA7BD,CA6BE,OAAOa,KAAP,EAAc;AACdjB,MAAAA,YAAY,CAAEM,SAAD,KAAgB,EAC3B,GAAGA,SADwB;AAE3BL,QAAAA,UAAU,EAAE,KAFe;AAG3BC,QAAAA,aAAa,EAAE,IAHY;AAI3BC,QAAAA,kBAAkB,EAAE,0BAJO;AAK3BC,QAAAA,aAAa,EAAE;AALY,OAAhB,CAAD,CAAZ;AAOD;AACF,GAxC6B,EAwC3B,CAACP,cAAD,EAAiBe,MAAjB,EAAyBJ,sBAAzB,EAAiDV,KAAjD,CAxC2B,CAA9B;AAyCA,SAAO,CAACC,SAAD,EAAYM,UAAZ,CAAP;AACD,CAtDM;;GAAMT,U;;KAAAA,U","sourcesContent":["import { useState, useCallback } from \"react\";\nimport config from \"../../Config\";\n// import { useAuth0 } from \"@auth0/auth0-react\";\n\nexport const API_DELETE = (endpointSuffix, rowId) => {\n  const [resDelete, setResDelete] = useState({\n    isDeleting: false,\n    isDeleteError: false,\n    deleteErrorMessage: \"\",\n    recordDeleted: false,\n  });\n\n  //   const { user } = useAuth0();\n  //   const userId = user.sub.split(\"|\")[1];\n  //   const { getAccessTokenSilently } = useAuth0();\n\n  const deleteData = useCallback(async () => {\n    setResDelete((prevState) => ({ ...prevState, isDeleting: true }));\n    try {\n      const token = await getAccessTokenSilently();\n      const result = await fetch(\n        `${config.API_ENDPOINT}/${endpointSuffix}/${userId}/${rowId}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      if (result.ok) {\n        setResDelete((prevState) => ({\n          ...prevState,\n          isDeleting: false,\n          isDeleteError: false,\n          deleteErrorMessage: \"\",\n          recordDeleted: true,\n        }));\n      } else {\n        setResDelete((prevState) => ({\n          ...prevState,\n          isDeleting: false,\n          isDeleteError: true,\n          deleteErrorMessage: \"Failed to delete record.\",\n          recordDeleted: false,\n        }));\n      }\n    } catch (error) {\n      setResDelete((prevState) => ({\n        ...prevState,\n        isDeleting: false,\n        isDeleteError: true,\n        deleteErrorMessage: \"Unable to delete record.\",\n        recordDeleted: false,\n      }));\n    }\n  }, [endpointSuffix, userId, getAccessTokenSilently, rowId]);\n  return [resDelete, deleteData];\n};\n"]},"metadata":{},"sourceType":"module"}