{"ast":null,"code":"var _jsxFileName = \"/Users/Drew/Projects/bakers-math/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport RecipeIngredientContainer from \"./RecipeIngredientContainer/RecipeIngredientContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [recipe, setRecipe] = useState({\n    recipe_name: \"\",\n    flour_total: 0 // ingredientsFlour: 1,\n    // ingredientsOther: 1,\n    // ingredient_0_name: \"\",\n    // ingredient_0_percent: 0,\n    // ingredient_1_name: \"\",\n    // ingredient_1_percent: 0,\n    // ingredient_2_name: \"\",\n    // ingredient_2_percent: 0,\n    // ingredient_3_name: \"\",\n    // ingredient_3_percent: 0,\n    // ingredient_4_name: \"\",\n    // ingredient_4_percent: 0,\n    // ingredient_5_name: \"\",\n    // ingredient_5_percent: 0,\n    // ingredient_6_name: \"\",\n    // ingredient_6_percent: 0,\n    // ingredient_7_name: \"\",\n    // ingredient_7_percent: 0,\n    // ingredient_8_name: \"\",\n    // ingredient_8_percent: 0,\n    // ingredient_9_name: \"\",\n    // ingredient_9_percent: 0,\n\n  });\n  const [flours, setFlour] = useState([{\n    \"whole wheat\": 10\n  }]);\n  const [ingredients, setIngredients] = useState([{\n    \"\": 0\n  }]);\n\n  const handleChange = e => {// setRecipe({ ...recipe, [e.target.name]: e.target.value });\n  }; // const handleAddClick = (e, ingredientType) => {\n  //   e.preventDefault();\n  //   let ingredient = recipe[ingredientType];\n  //   ingredient += 1;\n  //   setRecipe({ ...recipe, [ingredientType]: ingredient });\n  // };\n  // const handleSubtractClick = (ingredientType) => {\n  //   let ingredient = recipe[ingredientType];\n  //   ingredient -= 1;\n  //   setRecipe({ ...recipe, [ingredientType]: ingredient });\n  // };\n  // const renderIngredients = () => {\n  //   let arr = new Array(recipe.ingredientsOther).fill(\"\");\n  //   console.log(arr);\n  //   return arr.map((key, i) => {\n  //     let textValue = recipe[`ingredient_${i}_name`];\n  //     let percentValue = recipe[`ingredient_${i}_percent`];\n  //     return (\n  //       <RecipeIngredientContainer\n  //         key={i}\n  //         handleChange={(e) => handleChange(e)}\n  //         handleSubtractClick={(ingredientType) =>\n  //           handleSubtractClick(ingredientType)\n  //         }\n  //         ingredientTextName={`ingredient_${i}_name`}\n  //         ingredientTextValue={textValue}\n  //         ingredientPercentName={`ingredient_${i}_percent`}\n  //         ingredientPercentValue={percentValue}\n  //       />\n  //     );\n  //   });\n  // };\n\n\n  const renderFlours = () => {\n    return flours.map((key, i) => {\n      /*#__PURE__*/\n      _jsxDEV(RecipeIngredientContainer, {\n        handleChange: e => handleChange(e),\n        handleSubtractClick: ingredientType => handleSubtractClick(ingredientType),\n        ingredientTextName: `ingredient_${i}_name`,\n        ingredientTextValue: textValue,\n        ingredientPercentName: `ingredient_${i}_percent`,\n        ingredientPercentValue: percentValue\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"recipe\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          className: \"recipe-container__legend\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"recipe__input_heading\",\n          type: \"text\",\n          placeholder: \"Sourdough\",\n          value: recipe.recipe_name,\n          name: \"recipe_name\",\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          className: \"recipe-container__legend\",\n          children: \"Total Flour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"recipe__input_heading\",\n          type: \"number\",\n          placeholder: \"g\",\n          value: recipe.flour_total,\n          name: \"flour_total\",\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"recipe-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"recipe-banner-text\",\n          children: \"Flour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), renderFlours()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jT3dcIVhUrz8tBhh+Jw51yGmk08=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Drew/Projects/bakers-math/src/App.js"],"names":["useState","RecipeIngredientContainer","App","recipe","setRecipe","recipe_name","flour_total","flours","setFlour","ingredients","setIngredients","handleChange","e","renderFlours","map","key","i","ingredientType","handleSubtractClick","textValue","percentValue"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport RecipeIngredientContainer from \"./RecipeIngredientContainer/RecipeIngredientContainer\";\n\nfunction App() {\n  const [recipe, setRecipe] = useState({\n    recipe_name: \"\",\n    flour_total: 0,\n    // ingredientsFlour: 1,\n    // ingredientsOther: 1,\n    // ingredient_0_name: \"\",\n    // ingredient_0_percent: 0,\n    // ingredient_1_name: \"\",\n    // ingredient_1_percent: 0,\n    // ingredient_2_name: \"\",\n    // ingredient_2_percent: 0,\n    // ingredient_3_name: \"\",\n    // ingredient_3_percent: 0,\n    // ingredient_4_name: \"\",\n    // ingredient_4_percent: 0,\n    // ingredient_5_name: \"\",\n    // ingredient_5_percent: 0,\n    // ingredient_6_name: \"\",\n    // ingredient_6_percent: 0,\n    // ingredient_7_name: \"\",\n    // ingredient_7_percent: 0,\n    // ingredient_8_name: \"\",\n    // ingredient_8_percent: 0,\n    // ingredient_9_name: \"\",\n    // ingredient_9_percent: 0,\n  });\n\n  const [flours, setFlour] = useState([{ \"whole wheat\": 10 }]);\n  const [ingredients, setIngredients] = useState([{ \"\": 0 }]);\n\n  const handleChange = (e) => {\n    // setRecipe({ ...recipe, [e.target.name]: e.target.value });\n  };\n\n  // const handleAddClick = (e, ingredientType) => {\n  //   e.preventDefault();\n  //   let ingredient = recipe[ingredientType];\n  //   ingredient += 1;\n  //   setRecipe({ ...recipe, [ingredientType]: ingredient });\n  // };\n\n  // const handleSubtractClick = (ingredientType) => {\n  //   let ingredient = recipe[ingredientType];\n  //   ingredient -= 1;\n  //   setRecipe({ ...recipe, [ingredientType]: ingredient });\n  // };\n\n  // const renderIngredients = () => {\n  //   let arr = new Array(recipe.ingredientsOther).fill(\"\");\n  //   console.log(arr);\n\n  //   return arr.map((key, i) => {\n  //     let textValue = recipe[`ingredient_${i}_name`];\n  //     let percentValue = recipe[`ingredient_${i}_percent`];\n  //     return (\n  //       <RecipeIngredientContainer\n  //         key={i}\n  //         handleChange={(e) => handleChange(e)}\n  //         handleSubtractClick={(ingredientType) =>\n  //           handleSubtractClick(ingredientType)\n  //         }\n  //         ingredientTextName={`ingredient_${i}_name`}\n  //         ingredientTextValue={textValue}\n  //         ingredientPercentName={`ingredient_${i}_percent`}\n  //         ingredientPercentValue={percentValue}\n  //       />\n  //     );\n  //   });\n  // };\n\n  const renderFlours = () => {\n    return flours.map((key, i) => {\n      <RecipeIngredientContainer\n        key={i}\n        handleChange={(e) => handleChange(e)}\n        handleSubtractClick={(ingredientType) =>\n          handleSubtractClick(ingredientType)\n        }\n        ingredientTextName={`ingredient_${i}_name`}\n        ingredientTextValue={textValue}\n        ingredientPercentName={`ingredient_${i}_percent`}\n        ingredientPercentValue={percentValue}\n      />;\n    });\n  };\n\n  return (\n    <main className=\"recipe\">\n      <form>\n        <div className=\"recipe-container\">\n          <legend className=\"recipe-container__legend\">Name</legend>\n          <input\n            className=\"recipe__input_heading\"\n            type=\"text\"\n            placeholder=\"Sourdough\"\n            value={recipe.recipe_name}\n            name=\"recipe_name\"\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div className=\"recipe-container\">\n          <legend className=\"recipe-container__legend\">Total Flour</legend>\n          <input\n            className=\"recipe__input_heading\"\n            type=\"number\"\n            placeholder=\"g\"\n            value={recipe.flour_total}\n            name=\"flour_total\"\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <hr />\n        <section className=\"recipe-section\">\n          <p className=\"recipe-banner-text\">Flour</p>\n          {renderFlours()}\n        </section>\n        {/* <section>\n          <p className=\"recipe-banner-text\">Ingredients</p>\n          {renderIngredients()}\n          <button\n            className=\"recipe-button_add\"\n            onClick={(e) => handleAddClick(e, \"ingredientsOther\")}\n          >\n            Add\n          </button>\n        </section> */}\n      </form>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}