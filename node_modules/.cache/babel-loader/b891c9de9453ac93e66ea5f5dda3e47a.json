{"ast":null,"code":"var _jsxFileName = \"/Users/Drew/Projects/bakers-math-client/src/FetchData/FetchData.js\";\nimport React from \"react\";\nimport { API_GET } from \"../Utilities/APImethods/API_GET\"; // import SkeletonLoader from \"../SkeletonLoader/SkeletonLoader\";\n// import Error from \"../Error/Error\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FetchData(props) {\n  const [{\n    data,\n    isLoading,\n    isError,\n    error\n  }] = API_GET(props.endpointArr);\n\n  const renderSkeleton = () => {\n    // return <SkeletonLoader skeletonNumber={props.skeletonNumber} />;\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Skeleton\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  };\n\n  const renderResults = () => {\n    return isError ? renderError() : renderContainer();\n  };\n\n  const renderError = () => {\n    // return <Error error={error} />;\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  };\n\n  const renderContainer = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/React.cloneElement(props.children, {\n        data: data\n      })]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? renderSkeleton() : renderResults()\n  }, void 0, false);\n}\n\n_c = FetchData;\nexport default FetchData;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchData\");","map":{"version":3,"sources":["/Users/Drew/Projects/bakers-math-client/src/FetchData/FetchData.js"],"names":["React","API_GET","FetchData","props","data","isLoading","isError","error","endpointArr","renderSkeleton","renderResults","renderError","renderContainer","cloneElement","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iCAAxB,C,CACA;AACA;;;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAM,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA;AAA5B,GAAD,IAAwCN,OAAO,CAACE,KAAK,CAACK,WAAP,CAArD;;AAEA,QAAMC,cAAc,GAAG,MAAM;AAC3B;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAHD;;AAKA,QAAMC,aAAa,GAAG,MAAM;AAC1B,WAAOJ,OAAO,GAAGK,WAAW,EAAd,GAAmBC,eAAe,EAAhD;AACD,GAFD;;AAIA,QAAMD,WAAW,GAAG,MAAM;AACxB;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAHD;;AAKA,QAAMC,eAAe,GAAG,MAAM;AAC5B,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEGZ,KAAK,CAACa,YAAN,CAAmBV,KAAK,CAACW,QAAzB,EAAmC;AAClCV,QAAAA,IAAI,EAAEA;AAD4B,OAAnC,CAFH;AAAA,oBADF;AAQD,GATD;;AAWA,sBAAO;AAAA,cAAGC,SAAS,GAAGI,cAAc,EAAjB,GAAsBC,aAAa;AAA/C,mBAAP;AACD;;KA7BQR,S;AA+BT,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { API_GET } from \"../Utilities/APImethods/API_GET\";\n// import SkeletonLoader from \"../SkeletonLoader/SkeletonLoader\";\n// import Error from \"../Error/Error\";\n\nfunction FetchData(props) {\n  const [{ data, isLoading, isError, error }] = API_GET(props.endpointArr);\n\n  const renderSkeleton = () => {\n    // return <SkeletonLoader skeletonNumber={props.skeletonNumber} />;\n    return <h1>Skeleton</h1>;\n  };\n\n  const renderResults = () => {\n    return isError ? renderError() : renderContainer();\n  };\n\n  const renderError = () => {\n    // return <Error error={error} />;\n    return <h1>Error</h1>;\n  };\n\n  const renderContainer = () => {\n    return (\n      <>\n        <h1>Data</h1>\n        {React.cloneElement(props.children, {\n          data: data,\n        })}\n      </>\n    );\n  };\n\n  return <>{isLoading ? renderSkeleton() : renderResults()}</>;\n}\n\nexport default FetchData;\n"]},"metadata":{},"sourceType":"module"}